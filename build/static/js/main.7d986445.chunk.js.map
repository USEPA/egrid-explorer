{"version":3,"sources":["assets/img/oil.svg","assets/img/papaya.svg","assets/img/solar.svg","assets/img/wind.svg","assets/img/logo.png","assets/data/csv/eGRID all-level sentence structure.csv","Components/Sentence.js","Components/OtherLevelMap.js","Components/OtherLevelMapLegend.js","Components/OtherLevelBarchart.js","Components/Table.js","Components/PlantLevelMapZoom.js","Components/ResourceMixChart.js","Components/Visualization.js","Components/Main.js","App.js","serviceWorker.js","index.js","assets/data/csv/subregion.csv","assets/data/csv/NERC.csv","assets/data/csv/state.csv","assets/data/csv/eGRID state fullname.csv","assets/data/csv/plant.csv","assets/data/csv/GGL.csv","assets/data/csv/US.csv","assets/img/coal.svg","assets/img/gas.svg","assets/img/hydro.svg","assets/img/nuclear.svg"],"names":["module","exports","SentenceDropdown","opts","selected_option","this","props","available_options","options","some","option","opt","id","updated_tier","indexOf","key","value","disabled","push","onChange","change","Component","SentenceMiscellaneous","OtherLevelMap","tooltip","React","createRef","projection","d3_composite","scale","translate","width","height","path","d3","mapfill","layer","label_width","layer_type","label_height","features","map","d","data","filter","e","name","prop","centroid","properties","fill_scale","range","domainArr","sort","a","b","domain","length","background","title","transform","style","fontSize","fontWeight","fill","className","textAnchor","i","stroke","strokeWidth","labels","x","y","rx","label","background_layer","ref","opacity","maxWidth","maxHeight","overflow","backgroundColor","boxShadow","borderRadius","OtherLevelMapLegend","legend","t","num","slice","substring","d3_legend","shape","shapeWidth","shapeHeight","shapePadding","labelOffset","orient","labelFormat","labelAlign","label_str","generatedLabels","split","node","call","selectAll","text","formatLegendLabel","OtherLevelBarchart","barchart","axis_x","axis_y","axis_x_title","state","sort_by","isNaN","Math","floor","by","marginLeft","barFillScale","barXScale","barYScale","paddingInner","paddingOuter","current","remove","bars","attr","append","enter","bandwidth","formatLabel","ticks","tickFormat","formatXaxis","unit","on","transition","duration","html","pageY","pageX","classed","updateView","initView","prevProps","prevState","field","formatNumber","us_data","ToggleButtonGroup","type","defaultValue","val","setState","ToggleButton","padding","UpdatedTable","startsWith","Table","striped","bordered","hover","responsive","region","table_info","COAL","US_COAL","OIL","US_OIL","GAS","US_GAS","NUCLEAR","US_NUCLEAR","HYDRO","US_HYDRO","BIOMASS","US_BIOMASS","WIND","US_WIND","SOLAR","US_SOLAR","GEOTHERMAL","US_GEOTHERMAL","OFSL","US_OFSL","OTHF","US_OTHF","TNPR","US_TNPR","THPR","US_THPR","CYPR","US_CYPR","CNPR","US_CNPR","PNAME","ORISPL","PSTATABB","href","SUBRGN","PLPRMFL","NAMEPCAP","CAPFAC","PLNGENAN","PLHTIANT","PLNOXAN","PLNOXRTA","PLNOXOZ","PLNOXRTO","PLSO2AN","PLSO2RTA","PLCO2AN","PLCO2RTA","PLCH4AN","PLCH4RTA","PLN2OAN","PLN2ORTA","PLCO2EQA","PLC2ERTA","mapboxgl","accessToken","PlantLevelMapZoom","fuels","selected_fuel","plant_outlier","PLNOXRA","PLNOXRO","PLSO2RA","PLCO2RA","PLNGENOZ","PLGENACL","undefined","PLGENAOL","PLGENAGS","PLGENANC","PLGENAHY","PLGENABM","PLGENAWI","PLGENASO","PLGENAGT","PLGENAOF","PLGENAOP","PLGENATN","PLGENATR","PLGENATH","PLGENACY","PLGENACN","PLHTIAN","PLHTIOZ","filter_text","filter_reset_text","w","clientWidth","h","clientHeight","boxlen","fuels_svg","fuel_icon_lookup","min","fuel_color_lookup","fuel_label_lookup","wrap_long_labels","insert","n","loaded","concat","json_data","getSource","setData","setRadius","select","JSON","stringify","FUEL","init_zoom","init_center","Map","container","center","zoom","setMaxZoom","setMinZoom","addControl","NavigationControl","FullscreenControl","ResetControl","_map","_container","document","createElement","innerHTML","cursor","onclick","flyTo","parentNode","removeChild","LayerControl","nodes","addSource","addLayer","source","paint","show_tooltip","hoveredPlantId","Popup","closeButton","closeOnClick","anchor","setFeatureState","getCanvas","setLngLat","geometry","coordinates","setText","addTo","getLngLat","lng","lat","Object","keys","forEach","description","renderToString","setHTML","factor","setPaintProperty","margin","ResourceMixChart","wrapper","barchart_wrapper","micromap","sort_text","w_legend","h_legend","fuel_name_lookup","fuel_names","fuel_colors","values","_","cumsum","f","w_micro","h_micro","fuel","each","Visualization","tier1","tier2","tier4","tier5","resource_mix_data","ggl_layer","topojson","ggl_topo","subrgn_layer","subrgn_topo","nerc_layer","nerc_topo","state_layer","us_topo","GGL","NERC","Subregions","initState","updateState","Promise","all","subrgn","statefullname","nerc","plant","ggl","us","then","state_fullname","ABBR","STATE","STATEFULL","replace","FIPSST","percentage","state_data","plant_data","subrgn_data","nerc_data","ggl_data","category","lookup","data_formatted","LON","LAT","HYPR","coal","oil","gas","nuclear","hydro","wind","solar","papaya","endsWith","vis","word","words","reverse","line","lineNumber","dy","parseFloat","tspan","pop","join","getComputedTextLength","Spinner","animation","variant","UpdatedVisualization","conjunction","tier1_0","conjunct1","conjunct2","conjunct3","conjunct4","tier1_1","tier1_2","tier1_3","tier1_4","tier1_5","tier1_6","tier1_7","tier1_8","tier1_9","Main","init_options","Units","all_options","tier1_available_options","tier2_available_options","tier4_available_options","tier5_available_options","handleChange1","bind","handleChange2","handleChange4","handleChange5","event","target","t2_avail","t2_val","t4_avail","t4_val","t5_avail","t5_val","console","log","tier2_options","op","tier4_options","tier5_options","App","OPTIONS","src","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d986445.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oil.9b1b3165.svg\";","module.exports = __webpack_public_path__ + \"static/media/papaya.303f93a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/solar.bb67ad70.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.d4de7a67.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.199eebe4.png\";","module.exports = __webpack_public_path__ + \"static/media/eGRID all-level sentence structure.a3d3be69.csv\";","import React, { Component } from \"react\";\nimport \"../App.css\";\n\nclass SentenceDropdown extends Component {\n  render() {\n    const opts = [];\n    let selected_option = this.props.selected_option,\n      available_options = this.props.available_options;\n\n    this.props.options.some((option) => {\n      let opt = null;\n      if (this.props.id === \"tier1\") {\n        opt = (\n          <option key={option[0]} value={option[0]} disabled={false}>\n            {option[1]}\n          </option>\n        );\n      } else if (this.props.id === this.props.updated_tier) {\n        opt = (\n          <option key={option[0]} value={option[0]} disabled={false}>\n            {option[1]}\n          </option>\n        );\n      } else if (available_options.indexOf(option[0]) !== -1) {\n        opt = (\n          <option key={option[0]} value={option[0]} disabled={false}>\n            {option[1]}\n          </option>\n        );\n      } else if (available_options.indexOf(option[0]) === -1) {\n        opt = (\n          <option key={option[0]} value={option[0]} disabled={true}>\n            {option[1]}\n          </option>\n        );\n      }\n      opts.push(opt);\n    });\n\n    return (\n      <select value={selected_option} onChange={this.props.change}>\n        {opts}\n      </select>\n    );\n  }\n}\n\nclass SentenceMiscellaneous extends Component {\n  render() {\n    return <span>{this.props.value}</span>;\n  }\n}\n\nexport { SentenceDropdown, SentenceMiscellaneous };\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport * as d3 from \"d3\";\r\nimport * as d3_composite from \"d3-composite-projections\";\r\n\r\nclass OtherLevelMap extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.tooltip = React.createRef();\r\n  }\r\n  componentDidUpdate(){\r\n\r\n  }\r\n\r\n  render() {\r\n    let marginTop = 80;\r\n    const projection = d3_composite\r\n      .geoAlbersUsaTerritories()\r\n      .scale(this.props.scale)\r\n      .translate([this.props.width / 2, this.props.height / 2]);\r\n    const path = d3.geoPath().projection(projection);\r\n    const mapfill = this.props.mapfill;\r\n\r\n    let layer = this.props.layer,\r\n      label_width =\r\n        this.props.layer_type === \"grid gross loss rates\"\r\n          ? 120\r\n          : this.props.layer_type === \"state\"\r\n          ? 20\r\n          : 40,\r\n      label_height =\r\n        this.props.layer_type !== \"grid gross loss rates\" ? 14 : 22;\r\n\r\n    layer.features = layer.features\r\n      .map((d) => {\r\n        if (this.props.data.filter((e) => e.name === d.name)[0]) {\r\n          let prop = this.props.data.filter((e) => e.name === d.name)[0];\r\n          prop.centroid = path.centroid(d);\r\n          d.properties = prop;\r\n        } else {\r\n          d.properties = null;\r\n        }\r\n        return d;\r\n      })\r\n      .filter((d) => d.properties !== null);\r\n\r\n    let fill_scale = d3.scaleThreshold().range(mapfill);\r\n    let domainArr = layer.features\r\n      .map((e) => e.properties.value)\r\n      .sort((a, b) => a - b);\r\n    fill_scale.domain(\r\n      d3\r\n        .range(mapfill.length - 1)\r\n        .map((d) => d3.quantile(domainArr, (d + 1) / mapfill.length))\r\n    );\r\n\r\n    let title = (\r\n      <text\r\n        transform={\r\n          \"translate(\" + this.props.width / 2 + \",\" + marginTop / 2 + \")\"\r\n        }\r\n        style={{\r\n          fontSize: \"1.2em\",\r\n          fontWeight: \"bold\",\r\n          fill: \"#000\",\r\n          className: \"title\",\r\n          textAnchor: \"middle\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </text>\r\n    );\r\n    let map = layer.features.map((d, i) => (\r\n      <path\r\n        key={\"path\" + i + \"_boundary\"}\r\n        d={path(d)}\r\n        className={\"paths region_\"+d.properties.id}\r\n        style={{\r\n          fill:\r\n            this.props.layer_type !== \"grid gross loss rates\"\r\n              ? fill_scale(d.properties.value)\r\n              : \"transparent\",\r\n          stroke: \"#000\",\r\n          strokeWidth: 0.5,\r\n        }}\r\n      />\r\n    ));\r\n    let labels = layer.features.map((d, i) => (\r\n      <g key={\"path\" + i + \"_label\"}>\r\n        <rect\r\n          x={d.properties.centroid[0] - label_width / 2}\r\n          y={d.properties.centroid[1]}\r\n          width={label_width}\r\n          height={label_height}\r\n          rx={4}\r\n          style={{\r\n            fill: \"#fff\",\r\n            stroke:\r\n              this.props.layer_type !== \"grid gross loss rates\"\r\n                ? \"none\"\r\n                : \"#000\",\r\n          }}\r\n        />\r\n        <text\r\n          x={d.properties.centroid[0]}\r\n          y={d.properties.centroid[1] + label_height * 0.8}\r\n          style={{\r\n            textAnchor: \"middle\",\r\n            fontSize:\r\n              this.props.layer_type !== \"grid gross loss rates\"\r\n                ? \"0.7em\"\r\n                : \"1em\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {d.properties.label}{this.props.layer_type !== \"grid gross loss rates\" ? \"\": \": \" + d.properties.value + \"%\"}\r\n        </text>\r\n      </g>\r\n    ));\r\n    let background;\r\n    if (this.props.layer_type === \"grid gross loss rates\") {\r\n      background = this.props.background_layer.features.map((d, i) => (\r\n        <path\r\n          key={\"path\" + i + \"_background\"}\r\n          d={path(d)}\r\n          className=\"paths\"\r\n          style={{ fill: \"transparent\", stroke: \"rgb(221, 221, 221)\" }}\r\n        />\r\n      ));\r\n    }\r\n    return (\r\n      <div>\r\n        <svg width={this.props.width} height={this.props.height}>\r\n          {title}\r\n          {this.props.layer_type === \"grid gross loss rates\" && background}\r\n          {map}\r\n          {labels}\r\n        </svg>\r\n        <div\r\n          ref={this.tooltip}\r\n          style={{\r\n            opacity: 0,\r\n            maxWidth: 400,\r\n            maxHeight: 520,\r\n            overflow: \"auto\",\r\n            backgroundColor: \"rgba(255,255,255,0.95)\",\r\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.5)\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherLevelMap;\r\n","import React, { Component, createRef } from \"react\";\nimport OtherLevelMap from \"./OtherLevelMap\";\nimport * as d3 from \"d3\";\nimport * as d3_legend from \"d3-svg-legend\";\n\nclass OtherLevelMapLegend extends Component {\n  constructor(props) {\n    super(props);\n    this.legend = React.createRef();\n  }\n\n  formatLegendLabel(t) {\n    if (t >= 1000) {\n      let num = d3.format(\".2s\")(t);\n      let abbr = num.slice(-1);\n      if (abbr === \"G\") {\n        num = num.substring(0, num.length - 1) + \"B\";\n      }\n      return num;\n    } else {\n      return d3.format(\".3\")(t);\n    }\n  }\n  render() {\n    const mapfill = this.props.mapfill;\n    let fill_scale = d3.scaleThreshold().range(mapfill);\n    let domainArr = this.props.data.map((e) => e.value).sort((a, b) => a - b);\n    fill_scale.domain(\n      d3\n        .range(mapfill.length - 1)\n        .map((d) => d3.quantile(domainArr, (d + 1) / mapfill.length))\n    );\n\n    let legend = d3_legend\n      .legendColor()\n      .scale(fill_scale)\n      .shape(\"rect\")\n      .shapeWidth(90)\n      .shapeHeight(10)\n      .shapePadding(0)\n      .labelOffset(10)\n      .orient(\"horizontal\")\n      .scale(fill_scale)\n      .labelFormat(d3.format(\".3f\"))\n      .labelAlign(\"start\")\n      .labels((d) => {\n        if (d.i === 0) {\n          return 0;\n        } else {\n          let label_str = d.generatedLabels[d.i - 1].split(\" \");\n          return label_str[label_str.length - 1];\n        }\n      });\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <g\n          ref={(node) =>\n            d3\n              .select(node)\n              .call(legend)\n              .selectAll(\"text\")\n              .text(this.formatLegendLabel)\n          }\n        ></g>\n      </svg>\n    );\n  }\n}\n\nexport default OtherLevelMapLegend;\n","import React, { Component } from \"react\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\n\nimport * as d3 from \"d3\";\nclass OtherLevelBarchart extends Component {\n  constructor(props) {\n    super(props);\n    this.barchart = React.createRef();\n    this.axis_x = React.createRef();\n    this.axis_y = React.createRef();\n    this.axis_x_title = React.createRef();\n    this.tooltip = React.createRef();\n    this.state = {\n      sort_by: \"alphabet\",\n    };\n  }\n\n  formatXaxis(d) {\n    if (d >= 1000) {\n      let num = d3.format(\".2s\")(d);\n      let abbr = num.slice(-1);\n      if (abbr === \"G\") {\n        num = num.substring(0, num.length - 1) + \"B\";\n      }\n      let chars1 = num.slice(-3);\n      let chars2 = chars1.substring(0, 2);\n      if (chars2 === \".0\") {\n        num = num.slice(0, -3) + num.slice(-1);\n        return num;\n      }\n      return num;\n    } else if (d >= 1 && d < 10) {\n      return d3.format(\".2\")(d);\n    } else if (d < 1) {\n      return d3.format(\".3\")(d);\n    } else {\n      return d3.format(\".0f\")(d);\n    }\n  }\n\n  formatNumber(d) {\n    if (d < 1) {\n      return d3.format(\".3f\")(d);\n    } else if (d >= 1000000) {\n      return d3.format(\",.0f\")(d);\n    } else {\n      return isNaN(d) ? \"\" : d3.format(\",.2f\")(Math.floor(d * 100) / 100);\n    }\n  }\n\n  formatLabel(d) {\n    if (d >= 1000000) {\n      var num = d3.format(\".2s\")(d);\n      var abbr = num.slice(-1);\n      if (abbr === \"G\") {\n        num = num.substring(0, num.length - 1) + \"B\";\n      }\n      var chars1 = num.slice(-3);\n      var chars2 = chars1.substring(0, 2);\n      if (chars2 === \".0\") {\n        num = num.slice(0, -3) + num.slice(-1);\n        return num;\n      }\n      return num;\n    } else if (d >= 1 && d < 10) {\n      return d3.format(\".2\")(d);\n    } else if (d < 1) {\n      return d3.format(\".3\")(d);\n    } else {\n      return isNaN(d) ? \"\" : d3.format(\",.0f\")(d);\n    }\n  }\n\n  initView(by) {\n    // scale\n    let marginTop = 40,\n      marginBottom = 0,\n      marginRight = 60,\n      marginLeft = this.props.layer_type === \"state\" ? 130 : 60;\n    let barFillScale = d3.scaleThreshold().range(this.props.mapfill),\n      barXScale = d3\n        .scaleLinear()\n        .range([0, this.props.width - marginLeft - marginRight])\n        .domain(d3.extent(this.props.data, (e) => e.value)),\n      barYScale = d3\n        .scaleBand()\n        .range([0, this.props.height - marginTop - marginBottom])\n        .domain(this.props.data.map((d) => d.name))\n        .paddingInner(0.1)\n        .paddingOuter(0.2);\n\n    // update scale domain\n    let domainArr = this.props.data.map((e) => e.value).sort((a, b) => a - b);\n    barFillScale.domain(\n      d3\n        .range(this.props.mapfill.length - 1)\n        .map((d) => d3.quantile(domainArr, (d + 1) / this.props.mapfill.length))\n    );\n\n    // bars\n    d3.select(this.barchart.current).selectAll(\"g\").remove();\n    let bars = d3\n      .select(this.barchart.current)\n      .attr(\"transform\", \"translate(\" + marginLeft + \",\" + marginTop + \")\")\n      .append(\"g\")\n      .selectAll(\"g\")\n      .data(this.props.data)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", d=>\"bars mouseover_target\" + \" region_\" + d.id)\n      .attr(\"transform\", (d) => \"translate(0,\" + barYScale(d.name) + \")\");\n\n    bars\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"width\", (d) => barXScale(d.value))\n      .attr(\"height\", barYScale.bandwidth())\n      .style(\"fill\", (d) => barFillScale(d.value));\n\n    bars\n      .append(\"text\")\n      .attr(\"class\", \"labels\")\n      .attr(\"x\", (d) => barXScale(d.value))\n      .attr(\"y\", 0)\n      .attr(\"dx\", 5)\n      .attr(\"dy\", barYScale.bandwidth() / 2 + 5)\n      .text((d) => this.formatLabel(d.value))\n      .style(\"fill\", \"#000\")\n      .style(\"stroke\", \"none\");\n\n    // axis\n    d3.select(this.axis_x.current).selectAll(\"g\").remove();\n    d3.select(this.axis_x.current)\n      .attr(\"class\", \"axis_x\")\n      .attr(\"transform\", \"translate(\" + marginLeft + \",\" + marginTop + \")\")\n      .call(d3.axisTop(barXScale).ticks(5).tickFormat(this.formatXaxis))\n      .selectAll(\"text\")\n      .attr(\"transform\", \"rotate(-30)\");\n\n    d3.select(this.axis_x_title.current)\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          (this.props.width - marginRight + 5) +\n          \",\" +\n          marginTop +\n          \")\"\n      )\n      .style(\"fill\", \"#000\")\n      .style(\"text-anchor\", \"start\")\n      .style(\"stroke\", \"none\")\n      .style(\"font-size\", \"0.75em\")\n      .text(this.props.unit);\n\n    d3.select(this.axis_y.current).selectAll(\"g\").remove();\n    d3.select(this.axis_y.current)\n      .attr(\"transform\", \"translate(\" + marginLeft + \",\" + marginTop + \")\")\n      .attr(\"class\", \"axis_y\")\n      .call(d3.axisLeft(barYScale))\n      .selectAll('.tick')\n      .attr('class', d=>'tick mouseover_target region_'+ this.props.data.filter(e=>e.name===d).map(e=>e.id)[0]);\n    \n    d3.selectAll('.mouseover_target')\n    .on('mouseover', d=>{\n      d3.select(this.tooltip.current)\n      .transition()\n      .duration(100)\n      .style(\"opacity\", 1);\n    })\n    .on('mousemove', d=>{\n      let html;\n      if (typeof(d)===\"object\") {\n        html = \"<span>\"+d.value + \" \" + d.unit + \"</span>\";\n        d3.select(this.tooltip.current)\n        .html(html)\n        .style(\"position\", \"absolute\")\n        .style(\"top\", d3.event.pageY - 30 + \"px\")\n        .style(\"left\", d3.event.pageX + 30 + \"px\")\n        .style(\"opacity\", 1);\n\n        d3.selectAll('.region_'+d.id+' rect').classed('selected', true);\n        d3.selectAll('path.region_'+d.id).classed('selected', true);\n      }\n    })\n    .on('mouseout', d=>{\n      d3.select(this.tooltip.current)\n      .transition()\n      .duration(500)\n      .style(\"opacity\", 0);\n      d3.selectAll('.selected').classed('selected', false);\n    });\n\n    this.updateView(by);\n  }\n\n  updateView(by) {\n    let marginTop = 40,\n      marginBottom = 0;\n    let barYScale = d3\n      .scaleBand()\n      .range([0, this.props.height - marginTop - marginBottom])\n      .domain(\n        this.props.data\n          .sort((a, b) =>\n            by === \"amount\"\n              ? d3.descending(a.value, b.value)\n              : d3.ascending(a.name, b.name)\n          )\n          .map((d) => d.name)\n      )\n      .paddingInner(0.1)\n      .paddingOuter(0.2);\n\n    d3.select(this.barchart.current)\n      .selectAll(\".bars\")\n      .transition()\n      .attr(\"transform\", (d) => \"translate(0,\" + barYScale(d.name) + \")\");\n\n    d3.select(this.axis_y.current).call(d3.axisLeft(barYScale));\n  }\n\n  componentDidMount() {\n    this.initView(this.state.sort_by);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.field !== prevProps.field) {\n      this.initView(this.state.sort_by);\n    } else {\n      if (this.state.sort_by !== prevState.sort_by) {\n        this.updateView(this.state.sort_by);\n      }\n    }\n  }\n\n  render() {\n    // title\n    let title = (\n      <p\n        style={{\n          fontSize: \"1.2em\",\n          fontWeight: \"bold\",\n          fill: \"#000\",\n          className: \"title\",\n          textAnchor: \"middle\",\n        }}\n      >\n        {\"US: \" +\n          this.formatNumber(this.props.us_data[0][this.props.field]) +\n          \"(\" +\n          this.props.unit +\n          \")\"}\n      </p>\n    );\n\n    return (\n      <div>\n        {title}\n        <ToggleButtonGroup\n          type=\"radio\"\n          name=\"options\"\n          defaultValue={this.state.sort_by}\n          onChange={(val) => this.setState({ sort_by: val })}\n        >\n          <ToggleButton value={\"alphabet\"}>Sort Alphabetically</ToggleButton>\n          <ToggleButton value={\"amount\"}>Sort by Amount</ToggleButton>\n        </ToggleButtonGroup>\n        <svg width={this.props.width} height={this.props.height}>\n          <g className={\"axis\"}>\n            <g ref={this.axis_x}></g>\n            <text ref={this.axis_x_title}></text>\n            <g ref={this.axis_y}></g>\n          </g>\n\n          <g ref={this.barchart}></g>\n        </svg>\n        <div\n          ref={this.tooltip}\n          style={{\n            opacity: 0,\n            maxWidth: 400,\n            maxHeight: 520,\n            padding: 5,\n            overflow: \"auto\",\n            backgroundColor: \"rgba(255,255,255,0.95)\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.5)\",\n            borderRadius: \"4px\",\n          }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default OtherLevelBarchart;\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nclass UpdatedTable extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.title.startsWith(\"Resource Mix\") ? (\n          <Table striped bordered hover responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>Generation by Fuel Type</th>\n                {this.props.region !== \"US\" && (\n                  <th>\n                    {this.props.region}\n                    {\" Resource Mix (%)\"}\n                  </th>\n                )}\n                <th>US Resource Mix (%)</th>\n              </tr>\n            </thead>\n            {this.props.title === \"Resource Mix by all fuel types\" && (\n              <tbody>\n                <tr className={this.props.type === \"COAL\" ? \"selected\" : \"\"}>\n                  <td>Coal</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.COAL}</td>\n                  )}\n                  <td>{this.props.table_info.US_COAL}</td>\n                </tr>\n                <tr className={this.props.type === \"OIL\" ? \"selected\" : \"\"}>\n                  <td>Oil</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.OIL}</td>\n                  )}\n                  <td>{this.props.table_info.US_OIL}</td>\n                </tr>\n                <tr className={this.props.type === \"GAS\" ? \"selected\" : \"\"}>\n                  <td>Gas</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.GAS}</td>\n                  )}\n                  <td>{this.props.table_info.US_GAS}</td>\n                </tr>\n                <tr className={this.props.type === \"NUCLEAR\" ? \"selected\" : \"\"}>\n                  <td>Nuclear</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.NUCLEAR}</td>\n                  )}\n                  <td>{this.props.table_info.US_NUCLEAR}</td>\n                </tr>\n                <tr className={this.props.type === \"HYDRO\" ? \"selected\" : \"\"}>\n                  <td>Hydro</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.HYDRO}</td>\n                  )}\n                  <td>{this.props.table_info.US_HYDRO}</td>\n                </tr>\n                <tr className={this.props.type === \"BIOMASS\" ? \"selected\" : \"\"}>\n                  <td>Biomass</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.BIOMASS}</td>\n                  )}\n                  <td>{this.props.table_info.US_BIOMASS}</td>\n                </tr>\n                <tr className={this.props.type === \"WIND\" ? \"selected\" : \"\"}>\n                  <td>Wind</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.WIND}</td>\n                  )}\n                  <td>{this.props.table_info.US_WIND}</td>\n                </tr>\n                <tr className={this.props.type === \"SOLAR\" ? \"selected\" : \"\"}>\n                  <td>Solar</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.SOLAR}</td>\n                  )}\n                  <td>{this.props.table_info.US_SOLAR}</td>\n                </tr>\n                <tr\n                  className={this.props.type === \"GEOTHERMAL\" ? \"selected\" : \"\"}\n                >\n                  <td>Geothermal</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.GEOTHERMAL}</td>\n                  )}\n                  <td>{this.props.table_info.US_GEOTHERMAL}</td>\n                </tr>\n                <tr className={this.props.type === \"OFSL\" ? \"selected\" : \"\"}>\n                  <td>Other Fossil</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.OFSL}</td>\n                  )}\n                  <td>{this.props.table_info.US_OFSL}</td>\n                </tr>\n                <tr className={this.props.type === \"OTHF\" ? \"selected\" : \"\"}>\n                  <td>Other Unknown/Purchased Fuel</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.OTHF}</td>\n                  )}\n                  <td>{this.props.table_info.US_OTHF}</td>\n                </tr>\n              </tbody>\n            )}\n            {this.props.title ===\n              \"Resource Mix by renewable vs. non-renewable fuels\" && (\n              <tbody>\n                <tr className={this.props.type === \"HYDRO\" ? \"selected\" : \"\"}>\n                  <td>Hydro</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.HYDRO}</td>\n                  )}\n                  <td>{this.props.table_info.US_HYDRO}</td>\n                </tr>\n                <tr className={this.props.type === \"TNPR\" ? \"selected\" : \"\"}>\n                  <td>Total Nonrenewables</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.TNPR}</td>\n                  )}\n                  <td>{this.props.table_info.US_TNPR}</td>\n                </tr>\n                <tr className={this.props.type === \"THPR\" ? \"selected\" : \"\"}>\n                  <td>Total Nonhydro Renewables</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.THPR}</td>\n                  )}\n                  <td>{this.props.table_info.US_THPR}</td>\n                </tr>\n              </tbody>\n            )}\n            {this.props.title ===\n              \"Resource Mix by combustible vs. non-combustible fuels\" && (\n              <tbody>\n                <tr className={this.props.type === \"CYPR\" ? \"selected\" : \"\"}>\n                  <td>Total Combustion</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.CYPR}</td>\n                  )}\n                  <td>{this.props.table_info.US_CYPR}</td>\n                </tr>\n                <tr className={this.props.type === \"CNPR\" ? \"selected\" : \"\"}>\n                  <td>Total Noncumbustion</td>\n                  {this.props.region !== \"US\" && (\n                    <td>{this.props.table_info.CNPR}</td>\n                  )}\n                  <td>{this.props.table_info.US_CNPR}</td>\n                </tr>\n              </tbody>\n            )}\n          </Table>\n        ) : (\n          <Table striped bordered hover responsive=\"sm\">\n            <thead>\n              <tr>\n                <th>Plant Name</th>\n                <th>{this.props.table_info.PNAME}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Facility ID</td>\n                <td>{this.props.table_info.ORISPL}</td>\n              </tr>\n              <tr>\n                <td>Plant State</td>\n                <td>{this.props.table_info.PSTATABB}</td>\n              </tr>\n              <tr>\n                <td>eGRID Subregion</td>\n                <td><a href=\"https://www.epa.gov/sites/production/files/styles/large/public/2020-03/2018_egrid_subregions.png\">{this.props.table_info.SUBRGN}</a></td>\n              </tr>\n              <tr>\n                <td>Plant Primary Fuel</td>\n                <td>{this.props.table_info.PLPRMFL}</td>\n              </tr>\n              <tr>\n                <td>Nameplate Capacity (MW)</td>\n                <td>{this.props.table_info.NAMEPCAP}</td>\n              </tr>\n              <tr>\n                <td>Plant Capacity Factor</td>\n                <td>{this.props.table_info.CAPFAC}</td>\n              </tr>\n              <tr>\n                <td>Generation (MWh)</td>\n                <td>{this.props.table_info.PLNGENAN}</td>\n              </tr>\n              <tr>\n                <td>Heat Input (MMBtu)</td>\n                <td>{this.props.table_info.PLHTIANT}</td>\n              </tr>\n              <tr>\n                <td>NOₓ Annual Emissions (tons)</td>\n                <td>{this.props.table_info.PLNOXAN}</td>\n              </tr>\n              <tr>\n                <td>NOₓ Annual Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLNOXRTA}</td>\n              </tr>\n              <tr>\n                <td>NOₓ Ozone Season Emissions (tons)</td>\n                <td>{this.props.table_info.PLNOXOZ}</td>\n              </tr>\n              <tr>\n                <td>NOₓ Ozone Season Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLNOXRTO}</td>\n              </tr>\n              <tr>\n                <td>SO₂ Annual Emissions (tons)</td>\n                <td>{this.props.table_info.PLSO2AN}</td>\n              </tr>\n              <tr>\n                <td>SO₂ Annual Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLSO2RTA}</td>\n              </tr>\n              <tr>\n                <td>CO₂ Annual Emissions (tons)</td>\n                <td>{this.props.table_info.PLCO2AN}</td>\n              </tr>\n              <tr>\n                <td>CO₂ Annual Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLCO2RTA}</td>\n              </tr>\n              <tr>\n                <td>CH₄ Annual Emissions (lbs)</td>\n                <td>{this.props.table_info.PLCH4AN}</td>\n              </tr>\n              <tr>\n                <td>CH₄ Annual Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLCH4RTA}</td>\n              </tr>\n              <tr>\n                <td>N₂O Annual Emissions (lbs)</td>\n                <td>{this.props.table_info.PLN2OAN}</td>\n              </tr>\n              <tr>\n                <td>N₂O Annual Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLN2ORTA}</td>\n              </tr>\n              <tr>\n                <td>CO₂ equivalent Annual Emissions (tons)</td>\n                <td>{this.props.table_info.PLCO2EQA}</td>\n              </tr>\n              <tr>\n                <td>CO₂ equivalent Output Emission Rate (lb/MWh)</td>\n                <td>{this.props.table_info.PLC2ERTA}</td>\n              </tr>\n            </tbody>\n          </Table>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default UpdatedTable;\n","import React, { Component } from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport mapboxgl from \"mapbox-gl\";\nimport * as d3 from \"d3\";\n\nimport UpdatedTable from \"./Table\";\nimport \"./Visualization.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoia2F0aWVsb25nIiwiYSI6ImNpenpudmY1dzAxZmYzM2tmY2tobDN1MXoifQ._aoE2Zj7vx3dUlZw-gBCrg\";\n\nclass PlantLevelMapZoom extends Component {\n  constructor(props) {\n    super(props);\n    this.fuels = React.createRef();\n    this.state = {\n      selected_fuel: [],\n    };\n\n    this.plant_outlier = {\n      PLNOXRTA: 2000,\n      PLNOXRTO: 1000,\n      PLSO2RTA: 800,\n      PLCO2RTA: 10000,\n      PLCH4RTA: 20,\n      PLN2ORTA: 3,\n      PLC2ERTA: 10000,\n      PLNOXRA: 7,\n      PLNOXRO: 7,\n      PLSO2RA: 6,\n      PLCO2RA: 300,\n      PLNGENAN: 20000000,\n      PLNGENOZ: 10000000,\n      PLGENACL: undefined,\n      PLGENAOL: undefined,\n      PLGENAGS: 13000000,\n      PLGENANC: 27000000,\n      PLGENAHY: 16000000,\n      PLGENABM: undefined,\n      PLGENAWI: 2000000,\n      PLGENASO: 1000000,\n      PLGENAGT: 1000000,\n      PLGENAOF: 1000000,\n      PLGENAOP: undefined,\n      PLGENATN: 20000000,\n      PLGENATR: 20000000,\n      PLGENATH: 2000000,\n      PLGENACY: 20000000,\n      PLGENACN: 20000000,\n      PLHTIAN: 165000000,\n      PLHTIOZ: 75000000,\n      PLNOXAN: undefined,\n      PLNOXOZ: undefined,\n      PLSO2AN: 30000,\n      PLCO2AN: 17000000,\n      PLCH4AN: undefined,\n      PLN2OAN: undefined,\n      PLCO2EQA: 17000000,\n    };\n    this.filter_text = \"Filter by Primary Fuel\";\n    this.filter_reset_text = \"Show All Fuels\";\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.field !== prevProps.field) {\n      // filter\n      let w = d3.select(this.fuels.current).node().clientWidth,\n        h = d3.select(this.fuels.current).node().clientHeight;\n      let nbox = this.props.fuels.length + 1;\n      let boxlen = w / nbox;\n\n      d3.select(this.fuels.current).selectAll(\"div\").remove();\n      let fuels = d3\n        .select(this.fuels.current)\n        .append(\"div\")\n        .attr(\"class\", \"fuels\")\n        .selectAll(\"div\")\n        .data(this.props.fuels)\n        .enter()\n        .append(\"div\")\n        .style(\"display\", \"inline-block\")\n        .attr(\"class\", \"fuel\");\n\n      let fuels_svg = fuels\n        .append(\"svg\")\n        .attr(\"width\", boxlen)\n        .attr(\"height\", h);\n\n      fuels_svg\n        .append(\"image\")\n        .attr(\"xlink:href\", (d) => this.props.fuel_icon_lookup[d])\n        .attr(\"x\", boxlen / 2 - Math.min(boxlen, h * 0.5) / 2)\n        .attr(\"y\", 0)\n        .attr(\"width\", Math.min(boxlen, h * 0.5))\n        .attr(\"height\", Math.min(boxlen, h * 0.5));\n\n      fuels_svg\n        .filter((d) => this.props.fuel_icon_lookup[d] === \"\")\n        .append(\"circle\")\n        .attr(\"r\", Math.min(boxlen, h * 0.5) / 4)\n        .attr(\"fill\", (d) => this.props.fuel_color_lookup[d])\n        .attr(\"cx\", boxlen / 2)\n        .attr(\"cy\", Math.min(boxlen, h * 0.5) / 2);\n\n      fuels_svg\n        .append(\"text\")\n        .attr(\"x\", boxlen / 2)\n        .attr(\"y\", Math.min(boxlen, h * 0.5) * 1.5)\n        .attr(\"dx\", 0)\n        .attr(\"dy\", 0)\n        .text((d) => this.props.fuel_label_lookup[d])\n        .style(\"text-anchor\", \"middle\")\n        .call(this.props.wrap_long_labels, boxlen);\n\n      d3.select(\".fuels\")\n        .insert(\"div\", \".fuel\")\n        .style(\"display\", \"inline-block\")\n        .attr(\"class\", \"reset\")\n        .append(\"svg\")\n        .attr(\"width\", boxlen)\n        .attr(\"height\", h)\n        .append(\"text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", Math.min(boxlen, h * 0.5) / 2)\n        .attr(\"dx\", 0)\n        .attr(\"dy\", 0)\n        .text(this.filter_text)\n        .style(\"text-anchor\", \"start\")\n        .style(\"font-weight\", \"bold\")\n        .style(\"font-size\", \"1.2em\")\n        .call(this.props.wrap_long_labels, boxlen);\n\n      d3.selectAll(\".fuel\").on(\"click\", (d) => {\n        let n = d3\n          .select(this.fuels.current)\n          .selectAll(\".fuel\")\n          .filter((e) => e === d);\n        if (this.map.loaded()) {\n          if (n.classed(\"selected\")) {\n            this.setState({ selected_fuel: this.state.selected_fuel.filter(e=>e!==d)});\n          } else {\n            this.setState({ selected_fuel: this.state.selected_fuel.concat(d) });\n          }\n        }\n      });\n\n      if (this.map.loaded()) {\n        const data = {\n          type: \"FeatureCollection\",\n          features: this.props.json_data.features\n            .filter((d) => d.properties[this.props.field] >= 0)\n            .map((d) => {\n              if (\n                d.properties[this.props.field] >=\n                this.plant_outlier[this.props.field]\n              ) {\n                d.properties[this.props.field] = this.plant_outlier[\n                  this.props.field\n                ];\n              }\n              return d;\n            }),\n        };\n        this.map.getSource(\"plants\").setData(data);\n        this.setRadius(data.features);\n\n        d3.select(this.fuels.current)\n          .select(\".reset\")\n          .classed(\"reset_clickable\", false);\n        d3.select(this.fuels.current)\n          .select(\".reset text\")\n          .text(this.filter_text)\n          .call(\n            this.props.wrap_long_labels,\n            d3.select(this.fuels.current).node().clientWidth /\n              (this.props.fuels.length + 1)\n          );\n        d3.selectAll(\".selected\").classed(\"selected\", false);\n      }\n    } else {\n      if (\n        JSON.stringify(this.state.selected_fuel) !== JSON.stringify(prevState.selected_fuel) &&\n        this.state.selected_fuel.length !== 0\n      ) {\n        if (this.map.loaded()) {\n          const data = {\n            type: \"FeatureCollection\",\n            features: this.props.json_data.features\n              .filter((d) => d.properties[this.props.field] >= 0)\n              .filter((d) => this.state.selected_fuel.indexOf(d.properties.FUEL)!==-1)\n              .map((d) => {\n                if (\n                  d.properties[this.props.field] >=\n                  this.plant_outlier[this.props.field]\n                ) {\n                  d.properties[this.props.field] = this.plant_outlier[\n                    this.props.field\n                  ];\n                }\n                return d;\n              }),\n          };\n          this.map.getSource(\"plants\").setData(data);\n          this.setRadius(data.features);\n          d3.selectAll(\".selected\").classed(\"selected\", false);\n          d3.select(this.fuels.current)\n            .select(\".reset\")\n            .classed(\"reset_clickable\", true)\n            .on(\"click\", (d) => {\n              this.setState({ selected_fuel: [] });\n            });\n\n          d3.select(this.fuels.current)\n            .select(\".reset text\")\n            .text(this.filter_reset_text)\n            .call(\n              this.props.wrap_long_labels,\n              d3.select(this.fuels.current).node().clientWidth /\n                (this.props.fuels.length + 1)\n            );\n\n          d3.select(this.fuels.current)\n            .selectAll(\".fuel\")\n            .filter((d) => this.state.selected_fuel.indexOf(d)!==-1)\n            .classed(\"selected\", true);\n        }\n      } else if (\n        JSON.stringify(this.state.selected_fuel) !== JSON.stringify(prevState.selected_fuel) &&\n        this.state.selected_fuel.length === 0\n      ) {\n        if (this.map.loaded()) {\n          const data = {\n            type: \"FeatureCollection\",\n            features: this.props.json_data.features\n              .filter((d) => d.properties[this.props.field] >= 0)\n              .map((d) => {\n                if (\n                  d.properties[this.props.field] >=\n                  this.plant_outlier[this.props.field]\n                ) {\n                  d.properties[this.props.field] = this.plant_outlier[\n                    this.props.field\n                  ];\n                }\n                return d;\n              }),\n          };\n          this.map.getSource(\"plants\").setData(data);\n          this.setRadius(data.features);\n\n          d3.select(this.fuels.current)\n            .select(\".reset\")\n            .classed(\"reset_clickable\", false);\n          d3.select(this.fuels.current)\n            .select(\".reset text\")\n            .text(this.filter_text)\n            .call(\n              this.props.wrap_long_labels,\n              d3.select(this.fuels.current).node().clientWidth /\n                (this.props.fuels.length + 1)\n            );\n          d3.selectAll(\".selected\").classed(\"selected\", false);\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    let init_zoom = this.props.init_zoom,\n      init_center = this.props.init_center;\n\n    // set up map\n    this.map = new mapboxgl.Map({\n      container: this.container,\n      style: \"mapbox://styles/mapbox/light-v10\",\n      center: init_center,\n      zoom: init_zoom,\n    });\n    this.map.setMaxZoom(17);\n    this.map.setMinZoom(1);\n    this.map.addControl(new mapboxgl.NavigationControl());\n    this.map.addControl(new mapboxgl.FullscreenControl());\n\n    class ResetControl {\n      onAdd(map) {\n        this._map = map;\n        this._container = document.createElement(\"div\");\n        this._container.className = \"mapboxgl-ctrl\";\n        this._container.innerHTML =\n          \"<span class='mapboxgl-ctrl-icon' aria-haspopup='true' title='zoom to national view'><img src='reset_view_icon.png' alt='reset_view' width=29 height=29 style='border-radius: 4px'></img></span>\";\n        this._container.style.borderRadius = \"4px\";\n        this._container.style.boxShadow = \"0 0 0 2px rgba(0,0,0,.1)\";\n        this._container.style.cursor = \"pointer\";\n        this._container.onclick = function () {\n          map.flyTo({ center: init_center, zoom: init_zoom });\n        };\n        return this._container;\n      }\n      onRemove() {\n        this._container.parentNode.removeChild(this._container);\n        this._map = undefined;\n      }\n    }\n    this.map.addControl(new ResetControl());\n\n    class LayerControl {\n      onAdd(map) {\n        this._map = map;\n        this._container = document.createElement(\"div\");\n        this._container.className = \"mapboxgl-ctrl\";\n        this._container.innerHTML =\n          \"<span class='mapboxgl-ctrl-group' style='padding: 10px;' aria-haspopup='true' title='change layers'><input id='light-v10' type='radio' name='rtoggle' value='light' checked='checked'/><label for='light'>light</label><input id='satellite-v9' type='radio' name='rtoggle' value='satellite' /><label for='satellite'>satellite</label></span>\";\n\n        d3.select(this._container)\n          .selectAll(\"input\")\n          .nodes()\n          .map((n) => {\n            n.onclick = function () {\n              if (map.loaded()) {\n                // map.setStyle(\"mapbox://styles/mapbox/\" + n.id);\n              }\n            };\n          });\n        return this._container;\n      }\n\n      onRemove() {\n        this._container.parentNode.removeChild(this._container);\n        this._map = undefined;\n      }\n    }\n    this.map.addControl(new LayerControl());\n\n    this.map.on(\"load\", () => {\n      const data = {\n        type: \"FeatureCollection\",\n        features: this.props.json_data.features\n          .filter((d) => d.properties[this.props.field] >= 0)\n          .map((d) => {\n            if (\n              d.properties[this.props.field] >=\n              this.plant_outlier[this.props.field]\n            ) {\n              d.properties[this.props.field] = this.plant_outlier[\n                this.props.field\n              ];\n            }\n            return d;\n          }),\n      };\n\n      this.map.addSource(\"plants\", {\n        type: \"geojson\",\n        data: data,\n      });\n\n      this.map.addLayer({\n        id: \"plants\",\n        type: \"circle\",\n        source: \"plants\",\n        paint: {\n          \"circle-stroke-width\": 1,\n          \"circle-stroke-color\": [\n            \"case\",\n            [\"boolean\", [\"feature-state\", \"hover\"], false],\n            \"#000\",\n            \"#fff\",\n          ],\n          \"circle-opacity\": 0.8,\n          \"circle-color\": [\n            \"match\",\n            [\"get\", \"FUEL\"],\n            \"COAL\",\n            this.props.fuel_color_lookup.COAL,\n            \"OIL\",\n            this.props.fuel_color_lookup.OIL,\n            \"GAS\",\n            this.props.fuel_color_lookup.GAS,\n            \"NUCLEAR\",\n            this.props.fuel_color_lookup.NUCLEAR,\n            \"HYDRO\",\n            this.props.fuel_color_lookup.HYDRO,\n            \"BIOMASS\",\n            this.props.fuel_color_lookup.BIOMASS,\n            \"WIND\",\n            this.props.fuel_color_lookup.WIND,\n            \"SOLAR\",\n            this.props.fuel_color_lookup.SOLAR,\n            \"GEOTHERMAL\",\n            this.props.fuel_color_lookup.GEOTHERMAL,\n            \"OFSL\",\n            this.props.fuel_color_lookup.OFSL,\n            \"OTHF\",\n            this.props.fuel_color_lookup.OTHF,\n            \"#000\",\n          ],\n        },\n      });\n\n      this.setRadius(data.features);\n\n      // interaction: mousemove, mouseleave, click\n      let show_tooltip = false,\n        hoveredPlantId = null,\n        tooltip = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false,\n          maxWidth: d3.select(this.fuels.current).node().clientWidth * 0.7,\n        }).on(\"close\", () => {\n          tooltip.options.closeButton = false;\n          tooltip.options.anchor = \"bottom\";\n          show_tooltip = false;\n        });\n\n      this.map.on(\"mousemove\", \"plants\", (d) => {\n        if (!show_tooltip) {\n          if (d.features.length > 0) {\n            if (hoveredPlantId) {\n              this.map.setFeatureState(\n                { source: \"plants\", id: hoveredPlantId },\n                { hover: false }\n              );\n            }\n            hoveredPlantId = d.features[0].id;\n            this.map.setFeatureState(\n              { source: \"plants\", id: hoveredPlantId },\n              { hover: true }\n            );\n          }\n\n          this.map.getCanvas().style.cursor = \"pointer\";\n          tooltip\n            .setLngLat(d.features[0].geometry.coordinates.slice())\n            .setText(d.features[0].properties.name)\n            .addTo(this.map);\n        }\n      });\n\n      this.map.on(\"mouseleave\", \"plants\", () => {\n        if (!show_tooltip) {\n          this.map.getCanvas().style.cursor = \"\";\n          tooltip.remove();\n          if (hoveredPlantId) {\n            this.map.setFeatureState(\n              { source: \"plants\", id: hoveredPlantId },\n              { hover: false }\n            );\n          }\n          hoveredPlantId = null;\n        }\n      });\n\n      this.map.on(\"click\", \"plants\", (d) => {\n        if (\n          show_tooltip &&\n          d.features[0].geometry.coordinates.slice()[0] ===\n            tooltip.getLngLat().lng &&\n          d.features[0].geometry.coordinates.slice()[1] ===\n            tooltip.getLngLat().lat\n        ) {\n          tooltip.options.closeButton = false;\n          tooltip.options.anchor = \"bottom\";\n          show_tooltip = false;\n        } else {\n          if (d.features.length > 0) {\n            if (hoveredPlantId) {\n              this.map.setFeatureState(\n                { source: \"plants\", id: hoveredPlantId },\n                { hover: false }\n              );\n            }\n            hoveredPlantId = d.features[0].id;\n            this.map.setFeatureState(\n              { source: \"plants\", id: hoveredPlantId },\n              { hover: true }\n            );\n          }\n          let table_info = {};\n          Object.keys(d.features[0].properties).forEach(e=>{\n            table_info[e] = d.features[0].properties[e];\n          });\n          let description = renderToString(<UpdatedTable title={this.props.title} table_info={table_info}/>);\n          tooltip.options.closeButton = true;\n          tooltip.options.anchor = \"left\";\n          tooltip\n            .setLngLat(d.features[0].geometry.coordinates.slice())\n            .setHTML(description)\n            .addTo(this.map);\n          show_tooltip = true;\n        }\n      });\n    });\n  }\n\n  setRadius(features) {\n    let factor =\n      d3.max(features.map((d) => d.properties[this.props.field])) / 5;\n\n    this.map.setPaintProperty(\"plants\", \"circle-radius\", [\n      \"interpolate\",\n      [\"linear\"],\n      [\"zoom\"],\n      1,\n      [\"/\", [\"get\", this.props.field], factor],\n      17,\n      [\"/\", [\"get\", this.props.field], factor / 25],\n    ]);\n  }\n\n  render() {\n    let title = (\n      <p\n        style={{\n          fontSize: \"1.2em\",\n          fontWeight: \"bold\",\n          fill: \"#000\",\n          className: \"title\",\n          textAnchor: \"middle\",\n        }}\n      >\n        {this.props.title}\n      </p>\n    );\n\n    return (\n      <div>\n        {title}\n        <div\n          style={{ width: \"90%\", height: 80, margin: \"0 auto\" }}\n          ref={this.fuels}\n        ></div>\n        <div\n          ref={(node) => (this.container = node)}\n          className=\"mapbox-container\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlantLevelMapZoom;\n","import React, { Component } from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport * as d3 from \"d3\";\nimport * as _ from \"underscore\";\nimport * as d3_composite from \"d3-composite-projections\";\n\nimport UpdatedTable from \"./Table\";\n\nclass ResourceMixChart extends Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n    this.fuels = React.createRef();\n    this.barchart = React.createRef();\n    this.barchart_wrapper = React.createRef();\n    this.axis_y = React.createRef();\n    this.micromap = React.createRef();\n    this.tooltip = React.createRef();\n    this.state = {\n      selected_fuel: null,\n      show_tooltip: false\n    };\n    this.sort_text = \"Click to rearrange\";\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.field !== prevProps.field) {\n      this.initView();\n    } else {\n      if (\n        this.state.selected_fuel !== prevState.selected_fuel &&\n        this.state.selected_fuel !== null\n      ) {\n        d3.selectAll(\".selected\").classed(\"selected\", false);\n        d3.select(this.fuels.current)\n          .select(\".reset\")\n          .classed(\"reset_clickable\", true)\n          .on(\"click\", () => {\n            this.initView();\n          });\n        d3.select(this.fuels.current)\n          .selectAll(\".fuel\")\n          .filter((e) => e === this.state.selected_fuel)\n          .classed(\"selected\", true);\n\n        this.updateView(this.state.selected_fuel);\n      } else if (\n        this.state.selected_fuel !== prevState.selected_fuel &&\n        this.state.selected_fuel === null\n      ) {\n        d3.selectAll(\".selected\").classed(\"selected\", false);\n        d3.select(this.fuels.current)\n          .select(\".reset\")\n          .classed(\"reset_clickable\", false);\n\n        this.initView();\n      }\n    }\n  }\n\n  initView() {\n    this.setState({ selected_fuel: null });\n    let marginRight = 0,\n      marginLeft = this.props.layer_type === \"state\" ? 130 : 60;\n    let w = d3.select(this.barchart_wrapper.current).node().clientWidth,\n      h = d3.select(this.barchart_wrapper.current).node().clientHeight;\n\n    let w_legend = d3.select(this.fuels.current).node().clientWidth,\n      h_legend = d3.select(this.fuels.current).node().clientHeight;\n    let nbox = Object.keys(this.props.fuel_name_lookup).length + 1;\n    let boxlen = w_legend / nbox;\n\n    let fuel_names = this.props.fuels,\n      fuel_colors = Object.values(this.props.fuel_name_lookup).map(\n        (d) => this.props.fuel_color_lookup[d]\n      );\n    let barFillScale = d3.scaleOrdinal().domain(fuel_names).range(fuel_colors);\n\n    let data = [];\n    _.flatten([this.props.us_data, this.props.data]).forEach((d) => {\n      let cumsum = 0;\n      fuel_names.forEach((f) => {\n        data.push({\n          name: d.name,\n          id: d.id,\n          unit: this.props.unit,\n          type: this.props.fuel_name_lookup[f],\n          value: d[f],\n          cumsum: cumsum,\n        });\n        cumsum = cumsum + d[f];\n      });\n    });\n    let name = _.uniq(data.map((d) => d.name));\n\n    let barXScale = d3\n      .scaleLinear()\n      .domain([0, 100])\n      .range([0, w - marginLeft - marginRight]);\n    let barYScale = d3\n      .scaleBand()\n      .domain(name)\n      .range([0, h])\n      .paddingInner(0.1)\n      .paddingOuter(0.2);\n\n    // micromap\n    d3.select(this.micromap.current).selectAll(\"path\").remove();\n    let w_micro = d3.select(this.micromap.current).node().clientWidth,\n      h_micro = d3.select(this.micromap.current).node().clientHeight;\n    const projection = d3_composite\n      .geoAlbersUsaTerritories()\n      .scale(h_micro * 2)\n      .translate([w_micro / 2, h_micro / 2]);\n    const path = d3.geoPath().projection(projection);\n    d3.select(this.micromap.current)\n      .selectAll(\"path\")\n      .data(this.props.layer.features)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"class\", \"paths\")\n      .style(\"fill\", \"transparent\")\n      .style(\"stroke\", \"#000\")\n      .style(\"stroke-width\", 0.5);\n\n    // barchart\n    d3.select(this.barchart.current).selectAll(\"g\").remove();\n    d3.select(this.barchart.current)\n      .attr(\"transform\", \"translate(\" + marginLeft + \",0)\")\n      .append(\"g\")\n      .selectAll(\"rect\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", (d) => \"resource_mix_bars bars_\" + d.id + \"_\" + d.type)\n      .attr(\"x\", (d) => barXScale(d.cumsum))\n      .attr(\"y\", (d) => barYScale(d.name))\n      .attr(\"rx\", 4)\n      .attr(\"ry\", 4)\n      .attr(\"width\", (d) => barXScale(d.value))\n      .attr(\"height\", barYScale.bandwidth())\n      .style(\"fill\", (d) => barFillScale(d.type))\n      .on(\"mouseover\", (d) => {\n        if (!this.state.show_tooltip) {\n          d3.select(this.tooltip.current)\n          .transition()\n          .duration(100)\n          .style(\"opacity\", 1);\n        }\n      })\n      .on(\"mousemove\", (d) => {\n        if (!this.state.show_tooltip) {\n          let table_info = {};\n          data.filter(e=>e.name===d.name || e.name===\"US\").forEach(e=>{\n            if (e.name === \"US\") {\n              table_info[e.name+\"_\"+e.type]=d3.format(\".2f\")(e.value);\n            } else {\n              table_info[e.type]=d3.format(\".2f\")(e.value);\n            }\n          });\n          \n          let html = renderToString(<UpdatedTable region={d.name} title={this.props.title} type={d.type} table_info={table_info}/>);\n          d3.select(this.tooltip.current)\n            .html(html)\n            .style(\"position\", \"absolute\")\n            .style(\"top\", d3.event.pageY - 50 + \"px\")\n            .style(\"left\", d3.event.pageX + 50 + \"px\")\n            .style(\"opacity\", 1);\n          d3.select(this.wrapper.current)\n            .select(\"rect.bars_\" + d.id + \"_\" + d.type)\n            .classed(\"selected\", true);\n        }\n      })\n      .on(\"mouseout\", (d) => {\n        if (!this.state.show_tooltip) {\n          d3.select(this.tooltip.current)\n          .transition()\n          .duration(500)\n          .style(\"opacity\", 0);\n        d3.selectAll(\"rect.selected\").classed(\"selected\", false);\n        }\n      })\n      .on(\"click\", d => {\n        if (d3.select(this.wrapper.current).select(\"rect.bars_\" + d.id + \"_\" + d.type).classed('highlighted')) {\n          d3.selectAll('rect.highlighted').classed('highlighted', false);\n          this.setState({'show_tooltip': false});\n        } else {\n          d3.selectAll('rect.highlighted').classed('highlighted', false);\n          d3.selectAll('rect.selected').classed('selected', false);\n          d3.select(this.wrapper.current).select(\"rect.bars_\" + d.id + \"_\" + d.type).classed('highlighted', true);\n          this.setState({'show_tooltip': true});\n\n          d3.select(this.tooltip.current).style(\"opacity\", 0);\n          let table_info = {};\n          data.filter(e=>e.name===d.name || e.name===\"US\").forEach(e=>{\n            if (e.name === \"US\") {\n              table_info[e.name+\"_\"+e.type]=e.value;\n            } else {\n              table_info[e.type]=e.value;\n            }\n          });\n          \n          let html = renderToString(<UpdatedTable region={d.name} title={this.props.title} type={d.type} table_info={table_info}/>);\n          d3.select(this.tooltip.current)\n            .html(html)\n            .style(\"position\", \"absolute\")\n            .style(\"top\", d3.event.pageY - 50 + \"px\")\n            .style(\"left\", d3.event.pageX + 50 + \"px\")\n            .style(\"opacity\", 1);\n        }\n\n      });\n\n    // axis\n    d3.select(this.axis_y.current).selectAll(\"g\").remove();\n    d3.select(this.axis_y.current)\n      .attr(\"transform\", \"translate(\" + marginLeft + \",0)\")\n      .call(d3.axisLeft(barYScale))\n      .selectAll(\"text\")\n      .filter((d) => d === \"US\")\n      .style(\"font-size\", \"1.5em\");\n\n    // filter\n    d3.select(this.fuels.current).selectAll(\"div\").remove();\n    let fuels = d3\n      .select(this.fuels.current)\n      .append(\"div\")\n      .attr(\"class\", \"fuels\")\n      .selectAll(\"div\")\n      .data(Object.values(this.props.fuel_name_lookup))\n      .enter()\n      .append(\"div\")\n      .style(\"display\", \"inline-block\")\n      .attr(\"class\", \"fuel\");\n\n    let fuels_svg = fuels\n      .append(\"svg\")\n      .attr(\"width\", boxlen)\n      .attr(\"height\", h_legend);\n\n    fuels_svg\n      .append(\"image\")\n      .attr(\"xlink:href\", (d) => this.props.fuel_icon_lookup[d])\n      .attr(\"x\", boxlen / 2 - Math.min(boxlen, h_legend * 0.5) / 2)\n      .attr(\"y\", 0)\n      .attr(\"width\", Math.min(boxlen, h_legend * 0.5))\n      .attr(\"height\", Math.min(boxlen, h_legend * 0.5));\n\n    fuels_svg\n      .filter((d) => this.props.fuel_icon_lookup[d] === \"\")\n      .append(\"circle\")\n      .attr(\"r\", Math.min(boxlen, h_legend * 0.5) / 4)\n      .attr(\"fill\", (d) => this.props.fuel_color_lookup[d])\n      .attr(\"cx\", boxlen / 2)\n      .attr(\"cy\", Math.min(boxlen, h_legend * 0.5) / 2);\n\n    fuels_svg\n      .append(\"text\")\n      .attr(\"x\", boxlen / 2)\n      .attr(\"y\", Math.min(boxlen, h_legend * 0.5) * 1.5)\n      .attr(\"dx\", 0)\n      .attr(\"dy\", 0)\n      .text((d) => this.props.fuel_label_lookup[d])\n      .style(\"text-anchor\", \"middle\")\n      .call(this.props.wrap_long_labels, boxlen);\n\n    d3.select(\".fuels\")\n      .insert(\"div\", \".fuel\")\n      .style(\"display\", \"inline-block\")\n      .attr(\"class\", \"reset\")\n      .append(\"svg\")\n      .attr(\"width\", boxlen)\n      .attr(\"height\", h_legend)\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", Math.min(boxlen, h_legend * 0.5) * 0.75)\n      .attr(\"dx\", 0)\n      .attr(\"dy\", 0)\n      .text(this.sort_text)\n      .style(\"text-anchor\", \"start\")\n      .style(\"font-weight\", \"bold\")\n      .style(\"font-size\", \"1.1em\")\n      .call(this.props.wrap_long_labels, boxlen);\n\n    d3.selectAll(\".fuel\").on(\"click\", (d) => {\n      let n = d3\n        .select(this.fuels.current)\n        .selectAll(\".fuel\")\n        .filter((e) => e === d);\n      if (n.classed(\"selected\")) {\n        this.setState({ selected_fuel: null });\n      } else {\n        this.setState({ selected_fuel: d });\n      }\n    });\n  }\n\n  updateView(fuel) {\n    let marginRight = 0,\n      marginLeft = this.props.layer_type === \"state\" ? 130 : 60;\n    let w = d3.select(this.barchart_wrapper.current).node().clientWidth,\n      h = d3.select(this.barchart_wrapper.current).node().clientHeight;\n\n    if (fuel === null) {\n      const fuel_names = this.props.fuels;\n\n      let data = [];\n      _.flatten([this.props.us_data, this.props.data]).forEach((d) => {\n        let cumsum = 0;\n        fuel_names.forEach((f) => {\n          data.push({\n            name: d.name,\n            id: d.id,\n            unit: this.props.unit,\n            type: this.props.fuel_name_lookup[f],\n            value: d[f],\n            cumsum: cumsum,\n          });\n          cumsum = cumsum + d[f];\n        });\n      });\n      let name = _.uniq(data.map((d) => d.name));\n      name = _.flatten([[\"US\"], name.filter((d) => d !== \"US\")]);\n\n      let barXScale = d3\n        .scaleLinear()\n        .domain([0, 100])\n        .range([0, w - marginLeft - marginRight]);\n      let barYScale = d3\n        .scaleBand()\n        .domain(name)\n        .range([0, h])\n        .paddingInner(0.1)\n        .paddingOuter(0.2);\n\n      // barchart\n      d3.select(this.barchart.current)\n        .selectAll(\"rect\")\n        .attr(\"x\", (d) => barXScale(d.cumsum))\n        .transition()\n        .attr(\"y\", (d) => barYScale(d.name));\n\n      // axis\n      d3.select(this.axis_y.current).call(d3.axisLeft(barYScale));\n    } else {\n      const fuel_names = _.flatten([\n        [_.invert(this.props.fuel_name_lookup)[fuel]],\n        this.props.fuels.filter(\n          (d) => d !== _.invert(this.props.fuel_name_lookup)[fuel]\n        ),\n      ]);\n\n      let data = [];\n      _.flatten([this.props.us_data, this.props.data]).forEach((d) => {\n        let cumsum = 0;\n        fuel_names.forEach((f) => {\n          data.push({\n            name: d.name,\n            id: d.id,\n            unit: this.props.unit,\n            type: this.props.fuel_name_lookup[f],\n            value: d[f],\n            cumsum: cumsum,\n          });\n          cumsum = cumsum + d[f];\n        });\n      });\n\n      let name = data\n        .filter((d) => d.type === fuel)\n        .sort((a, b) => b.value - a.value)\n        .map((d) => d.name);\n      name = _.flatten([[\"US\"], name.filter((d) => d !== \"US\")]);\n\n      let barXScale = d3\n        .scaleLinear()\n        .domain([0, 100])\n        .range([0, w - marginLeft - marginRight]);\n\n      let barYScale = d3\n        .scaleBand()\n        .domain(name)\n        .range([0, h])\n        .paddingInner(0.1)\n        .paddingOuter(0.2);\n\n      d3.select(this.barchart.current)\n        .selectAll(\"rect\")\n        .each((d) => {\n          d.cumsum = data\n            .filter((e) => e.name === d.name && e.type === d.type)\n            .map((e) => e.cumsum)[0];\n        })\n        .attr(\"x\", (d) => barXScale(d.cumsum))\n        .transition()\n        .attr(\"y\", (d) => barYScale(d.name));\n\n      d3.select(this.axis_y.current).call(d3.axisLeft(barYScale));\n    }\n  }\n\n  render() {\n    let title = (\n      <p\n        style={{\n          fontSize: \"1.2em\",\n          fontWeight: \"bold\",\n          fill: \"#000\",\n          className: \"title\",\n          textAnchor: \"middle\",\n        }}\n      >\n        {this.props.title + \", by \" + this.props.layer_type}\n      </p>\n    );\n\n    return (\n      <div ref={this.wrapper}>\n        {title}\n        <svg\n          style={{ width: \"90%\", height: 150, margin: \"0 auto\" }}\n          ref={this.micromap}\n        ></svg>\n        <div\n          style={{ width: \"90%\", height: 80, margin: \"0 auto\" }}\n          ref={this.fuels}\n        ></div>\n        <svg\n          style={{ width: \"90%\", height: 600, margin: \"0 auto\" }}\n          ref={this.barchart_wrapper}\n        >\n          <g ref={this.barchart}></g>\n          <g ref={this.axis_y} className={\"axis axis_y\"}></g>\n        </svg>\n        <div\n          ref={this.tooltip}\n          style={{\n            opacity: 0,\n            maxWidth: 400,\n            maxHeight: 520,\n            overflow: \"auto\",\n            backgroundColor: \"rgba(255,255,255,0.95)\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.5)\",\n            borderRadius: \"4px\",\n          }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default ResourceMixChart;\n","import React, { Component } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson-client\";\r\n\r\nimport subrgn from \"../assets/data/csv/subregion.csv\";\r\nimport nerc from \"../assets/data/csv/NERC.csv\";\r\nimport state from \"../assets/data/csv/state.csv\";\r\nimport statefullname from \"../assets/data/csv/eGRID state fullname.csv\";\r\nimport plant from \"../assets/data/csv/plant.csv\";\r\nimport ggl from \"../assets/data/csv/GGL.csv\";\r\nimport us from \"../assets/data/csv/US.csv\";\r\n\r\nimport lookup from \"../assets/data/json/eGRID lookup.json\";\r\nimport subrgn_topo from \"../assets/data/json/SUBRGN.json\";\r\nimport nerc_topo from \"../assets/data/json/NERC.json\";\r\nimport ggl_topo from \"../assets/data/json/GGL.json\";\r\nimport us_topo from \"../assets/data/json/US.json\";\r\n\r\nimport coal from '../assets/img/coal.svg';\r\nimport gas from '../assets/img/gas.svg';\r\nimport hydro from '../assets/img/hydro.svg';\r\nimport nuclear from '../assets/img/nuclear.svg';\r\nimport oil from '../assets/img/oil.svg';\r\nimport papaya from '../assets/img/papaya.svg';\r\nimport solar from '../assets/img/solar.svg';\r\nimport wind from '../assets/img/wind.svg';\r\n\r\n\r\nimport OtherLevelMap from \"./OtherLevelMap\";\r\nimport OtherLevelMapLegend from \"./OtherLevelMapLegend\";\r\nimport OtherLevelBarchart from \"./OtherLevelBarchart\";\r\nimport PlantLevelMapZoom from \"./PlantLevelMapZoom\";\r\nimport ResourceMixChart from \"./ResourceMixChart\";\r\n\r\nimport \"./Visualization.css\";\r\n\r\nclass Visualization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      field: this.props.field,\r\n      name: this.props.name,\r\n      unit: this.props.unit,\r\n      tier1: this.props.tier1,\r\n      tier2: this.props.tier2,\r\n      tier4: this.props.tier4,\r\n      tier5: this.props.tier5,\r\n      data: [],\r\n      resource_mix_data: [],\r\n      json_data: [],\r\n      fuels: [],\r\n      mapfill: [],\r\n      background_layer: {},\r\n      layer: {}\r\n    };\r\n\r\n    this.ggl_layer = topojson.feature(ggl_topo, \"GGL\");\r\n    this.subrgn_layer = topojson.feature(subrgn_topo, \"subregion\");\r\n    this.nerc_layer = topojson.feature(nerc_topo, \"NERC\");\r\n    this.state_layer = topojson.feature(us_topo, \"states\");\r\n\r\n    this.ggl_layer.features.map((d) => (d.name = d.properties.GGL));\r\n    this.nerc_layer.features = this.nerc_layer.features\r\n      .filter((d) => d.properties.NERC !== \"-\")\r\n      .map((d) => {\r\n        d.name = d.properties.NERC;\r\n        return d;\r\n      });\r\n    this.subrgn_layer.features.map((d) => (d.name = d.properties.Subregions));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initState();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.field !== prevProps.field) {\r\n      this.updateState();\r\n    }\r\n  }\r\n\r\n  initState() {\r\n    Promise.all([\r\n      d3.csv(subrgn),\r\n      d3.csv(state),\r\n      d3.csv(statefullname),\r\n      d3.csv(nerc),\r\n      d3.csv(plant),\r\n      d3.csv(ggl),\r\n      d3.csv(us),\r\n    ]).then(([subrgn, state, state_fullname, nerc, plant, ggl, us]) => {\r\n      // process data\r\n      state.map((d) => {\r\n        d.label = d.PSTATABB;\r\n        d.ABBR = d.PSTATABB;\r\n        d.PSTATABB = state_fullname\r\n          .filter((e) => e.STATE === d.PSTATABB)\r\n          .map((e) => e.STATEFULL)[0]; //add state full names to state layer\r\n        d.name = d.PSTATABB;\r\n\r\n        Object.keys(d).forEach((e) => {\r\n          if (!isNaN(+d[e].replace(/,/g, \"\"))) {\r\n            d[e] = +d[e].replace(/,/g, \"\");\r\n          }\r\n        });\r\n        d.id = d.FIPSST;\r\n      });\r\n      this.state_layer.features.map((d) =>\r\n        state.filter((e) => e.FIPSST === d.id).length === 1\r\n          ? (d.name = state.filter((e) => e.FIPSST === d.id)[0].name)\r\n          : \"\"\r\n      );\r\n\r\n      plant.map((d, i) => {\r\n        d.label = d.PNAME;\r\n        d.name = d.PNAME;\r\n        Object.keys(d).forEach((e) => {\r\n          if (!isNaN(+d[e].replace(/,/g, \"\"))) {\r\n            d[e] = +d[e].replace(/,/g, \"\");\r\n          }\r\n        });\r\n        d.id = i;\r\n      });\r\n\r\n      subrgn.map((d, i) => {\r\n        d.label = d.SUBRGN;\r\n        d.name = d.SUBRGN;\r\n        Object.keys(d).forEach((e) => {\r\n          if (!isNaN(+d[e].replace(/,/g, \"\"))) {\r\n            d[e] = +d[e].replace(/,/g, \"\");\r\n          }\r\n        });\r\n        d.id = i;\r\n      });\r\n\r\n      nerc = nerc.filter((d) => d.NERC !== \"NA\");\r\n      nerc.map((d, i) => {\r\n        d.label = d.NERC;\r\n        d.name = d.NERC;\r\n        Object.keys(d).forEach(function (e) {\r\n          if (!isNaN(+d[e].replace(/,/g, \"\"))) {\r\n            d[e] = +d[e].replace(/,/g, \"\");\r\n          }\r\n        });\r\n        d.id = i;\r\n      });\r\n\r\n      ggl.map((d, i) => {\r\n        d.label = d.GGL;\r\n        d.name = d.GGL;\r\n        d.id = i;\r\n        d.unit = \"%\";\r\n        d.value = +d.percentage;\r\n      });\r\n\r\n      us.map((d) => {\r\n        Object.keys(d).forEach((e) => {\r\n          if (!isNaN(+d[e].replace(/,/g, \"\"))) {\r\n            d[e] = +d[e].replace(/,/g, \"\");\r\n          }\r\n        });\r\n        d.name = \"US\";\r\n        d.id = -1;\r\n      });\r\n\r\n      this.state_data = state;\r\n      this.plant_data = plant;\r\n      this.subrgn_data = subrgn;\r\n      this.nerc_data = nerc;\r\n      this.ggl_data = ggl;\r\n      this.us_data = us;\r\n\r\n      this.updateState();\r\n    });\r\n  }\r\n\r\n  updateState() {\r\n    let category = lookup[this.props.tier1],\r\n      region = lookup[this.props.tier5];\r\n    let data_formatted = [],\r\n      json_data = { type: \"FeatureCollection\", features: [] },\r\n      resource_mix_data = [],\r\n      fuels = [],\r\n      mapfill = [],\r\n      background_layer = { type: \"FeatureCollection\", features: [] },\r\n      layer = { type: \"FeatureCollection\", features: [] };\r\n\r\n    // set state depending on region and category\r\n    this.us_data.map((d) => {\r\n      Object.keys(d).forEach((e) => {\r\n        if (e.split(\"US\").length > 1) {\r\n          d[this.props.field.replace(/\\[|\\]|\\s/g, \"\").split(\",\")[0].substring(0,2) + e.substring(2)] = d[e];\r\n        }\r\n      });\r\n    });\r\n\r\n    let data = [];\r\n    if (region === \"eGRID subregion\") {\r\n      data = this.subrgn_data;\r\n      layer = this.subrgn_layer;\r\n    } else if (region === \"NERC region\") {\r\n      data = this.nerc_data;\r\n      layer = this.nerc_layer;\r\n    } else if (region === \"state\") {\r\n      data = this.state_data;\r\n      layer = this.state_layer;\r\n    } else if (region === \"Plant\") {\r\n      data = this.plant_data;\r\n    }\r\n\r\n    if (category === \"grid gross loss rates\") {\r\n      data_formatted = this.ggl_data;\r\n      layer = this.ggl_layer;\r\n      background_layer = this.state_layer;\r\n    } else if (category === \"resource mix (%)\") {\r\n      fuels = this.props.field.replace(/\\[|\\]|\\s/g, \"\").split(\",\");\r\n      resource_mix_data = data;\r\n    } else {\r\n      if (category.split(\"emission\").length > 1) {\r\n        mapfill = [\"#eff3ff\", \"#bdd7e7\", \"#6baed6\", \"#3182bd\", \"#08519c\"];\r\n      } else if (category.split(\"generation\").length > 1) {\r\n        mapfill = [\"#feedde\", \"#fdbe85\", \"#fd8d3c\", \"#e6550d\", \"#a63603\"];\r\n      } else if (\r\n        category.split(\"non-baseload\").length > 1 ||\r\n        category.split(\"heat input\").length > 1 ||\r\n        category.split(\"nameplate\").length > 1\r\n      ) {\r\n        mapfill = [\"#edf8e9\", \"#bae4b3\", \"#74c476\", \"#31a354\", \"#006d2c\"];\r\n      }\r\n\r\n      data_formatted = data.map((d) => {\r\n        return {\r\n          name: d.name,\r\n          id: d.id,\r\n          label: d.label,\r\n          unit: this.props.unit,\r\n          type: region !== \"Plant\" ? lookup[this.props.tier5] : d.FUEL,\r\n          value: d[this.props.field],\r\n        };\r\n      });\r\n\r\n      if (region === \"Plant\") {\r\n        fuels = [\"COAL\", \"OIL\", \"GAS\", \"NUCLEAR\", \"HYDRO\", \"BIOMASS\", \"WIND\", \"SOLAR\", \"GEOTHERMAL\", \"OFSL\", \"OTHF\"];\r\n        data.map((d) => {\r\n          json_data.features.push({\r\n            type: \"Feature\",\r\n            properties: d,\r\n            id: d.id,\r\n            title: d.name,\r\n            geometry: { type: \"Point\", coordinates: [+d.LON, +d.LAT] },\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      field: this.props.field,\r\n      name: this.props.name,\r\n      unit: this.props.unit,\r\n      tier1: this.props.tier1,\r\n      tier2: this.props.tier2,\r\n      tier4: this.props.tier4,\r\n      tier5: this.props.tier5,\r\n      data: data_formatted,\r\n      resource_mix_data: resource_mix_data,\r\n      json_data: json_data,\r\n      fuels: fuels,\r\n      mapfill: mapfill,\r\n      layer: layer,\r\n      background_layer: background_layer\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let category = lookup[this.props.tier1],\r\n      region = lookup[this.props.tier5];\r\n    const fuel_label_lookup = {\r\n      COAL: \"Coal\",\r\n      OIL: \"Oil\",\r\n      GAS: \"Gas\",\r\n      NUCLEAR: \"Nuclear\",\r\n      HYDRO: \"Hydro\",\r\n      BIOMASS: \"Biomass\",\r\n      WIND: \"Wind\",\r\n      SOLAR: \"Solar\",\r\n      GEOTHERMAL: \"Geothermal\",\r\n      OFSL: \"Other Fossil\",\r\n      OTHF: \"Other Unknown\",\r\n      HYPR: \"Hydro\",\r\n      THPR: \"All Non-Hydro Renewables\",\r\n      TNPR: \"All Non-Renewables\",\r\n      CYPR: \"All Combustion\",\r\n      CNPR: \"All Non-Combustion\"\r\n    };\r\n    const fuel_color_lookup = {\r\n      COAL: \"rgb(85, 85, 85)\",\r\n      OIL: \"rgb(237, 28, 36)\",\r\n      GAS: \"rgb(246, 139, 40)\",\r\n      NUCLEAR: \"rgb(207, 74, 154)\",\r\n      HYDRO: \"rgb(0, 129, 197)\",\r\n      BIOMASS: \"rgb(44, 160, 44)\",\r\n      WIND: \"rgb(13, 177, 75)\",\r\n      SOLAR: \"rgb(215, 201, 68)\",\r\n      GEOTHERMAL: \"rgb(255, 152, 150)\",\r\n      OFSL: \"rgb(140, 86, 75)\",\r\n      OTHF: \"rgb(255, 239, 213)\",\r\n      HYPR: \"rgb(0, 129, 197)\",\r\n      THPR: \"rgb(13, 177, 75)\",\r\n      TNPR: \"rgb(255, 187, 120)\",\r\n      CYPR: \"rgb(237, 28, 36)\",\r\n      CNPR: \"rgb(255, 187, 120)\"\r\n    };\r\n    const fuel_icon_lookup = {\r\n      COAL: coal,\r\n      OIL: oil,\r\n      GAS: gas,\r\n      NUCLEAR: nuclear,\r\n      HYDRO: hydro,\r\n      BIOMASS: \"\",\r\n      WIND: wind,\r\n      SOLAR: solar,\r\n      GEOTHERMAL: \"\",\r\n      OFSL: \"\",\r\n      OTHF: papaya,\r\n      HYPR: \"\",\r\n      THPR: \"\",\r\n      TNPR: \"\",\r\n      CYPR: \"\",\r\n      CNPR: \"\"\r\n    };\r\n    let fuel_name_lookup = {};\r\n    this.state.fuels.forEach(d=>{\r\n      if (d.endsWith(\"CLPR\")) {\r\n        fuel_name_lookup[d] = \"COAL\";\r\n      } else if (d.endsWith(\"OLPR\")) {\r\n        fuel_name_lookup[d] = \"OIL\";\r\n      } else if (d.endsWith(\"GSPR\")) {\r\n        fuel_name_lookup[d] = \"GAS\";\r\n      } else if (d.endsWith(\"NCPR\")) {\r\n        fuel_name_lookup[d] = \"NUCLEAR\";\r\n      } else if (d.endsWith(\"HYPR\")) {\r\n        fuel_name_lookup[d] = \"HYDRO\";\r\n      } else if (d.endsWith(\"BMPR\")) {\r\n        fuel_name_lookup[d] = \"BIOMASS\";\r\n      } else if (d.endsWith(\"WIPR\")){\r\n        fuel_name_lookup[d] = \"WIND\";\r\n      } else if (d.endsWith(\"SOPR\")){\r\n        fuel_name_lookup[d] = \"SOLAR\";\r\n      } else if (d.endsWith(\"GTPR\")){\r\n        fuel_name_lookup[d] = \"GEOTHERMAL\";\r\n      } else if (d.endsWith(\"OFPR\")){\r\n        fuel_name_lookup[d] = \"OFSL\";\r\n      } else if (d.endsWith(\"OPPR\")) {\r\n        fuel_name_lookup[d] = \"OTHF\";\r\n      } else if (d.endsWith(\"HYPR\")) {\r\n        fuel_name_lookup[d] = \"HYPR\";\r\n      } else if (d.endsWith(\"THPR\")) {\r\n        fuel_name_lookup[d] = \"THPR\";\r\n      } else if (d.endsWith(\"TNPR\")) {\r\n        fuel_name_lookup[d] = \"TNPR\";\r\n      } else if (d.endsWith(\"CYPR\")) {\r\n        fuel_name_lookup[d] = \"CYPR\";\r\n      } else if (d.endsWith(\"CNPR\")) {\r\n        fuel_name_lookup[d] = \"CNPR\";\r\n      }\r\n    });\r\n\r\n    const wrap_long_labels = function(text, width){\r\n      text.each(function() {\r\n        var text = d3.select(this),\r\n            words = text.text().split(/\\s+/).reverse(),\r\n            word,\r\n            line = [],\r\n            lineNumber = 0,\r\n            lineHeight = 1.1, // ems\r\n            x = text.attr(\"x\"),\r\n            y = text.attr(\"y\"),\r\n            dy = parseFloat(text.attr(\"dy\")),\r\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n        while (word = words.pop()) {\r\n          line.push(word);\r\n          tspan.text(line.join(\" \"));\r\n          if (tspan.node().getComputedTextLength() > width) {\r\n            line.pop();\r\n            tspan.text(line.join(\" \"));\r\n            line = [word];\r\n            tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    let vis;\r\n    if (category === \"grid gross loss rates\") {\r\n      vis = (\r\n        <OtherLevelMap\r\n          title={this.state.name}\r\n          width={800}\r\n          height={600}\r\n          scale={800}\r\n          layer={this.state.layer}\r\n          background_layer={this.state.background_layer}\r\n          data={this.state.data}\r\n          layer_type={category}\r\n          mapfill={this.state.mapfill}\r\n        />\r\n      );\r\n    } else if (category === \"resource mix (%)\") {\r\n      vis = (\r\n        <ResourceMixChart\r\n          title={this.state.name}\r\n          width={800}\r\n          height={600}\r\n          data={this.state.resource_mix_data}\r\n          us_data={this.us_data}\r\n          unit={this.props.unit}\r\n          fuels={this.state.fuels}\r\n          category={category}\r\n          field={this.state.field}\r\n          layer={this.state.layer}\r\n          layer_type={region}\r\n          fuel_label_lookup={fuel_label_lookup}\r\n          fuel_color_lookup={fuel_color_lookup}\r\n          fuel_icon_lookup={fuel_icon_lookup}\r\n          fuel_name_lookup={fuel_name_lookup}\r\n          wrap_long_labels={wrap_long_labels}\r\n        />\r\n      );\r\n    } else {\r\n      if (region !== \"Plant\") {\r\n        vis =\r\n          this.state.data.length === 0 ? (\r\n            <div className=\"loading\">\r\n              <Spinner animation=\"grow\" variant=\"success\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"visualization\">\r\n              <div className=\"visualization-parts\">\r\n                <OtherLevelMap\r\n                  title={this.state.name}\r\n                  width={800}\r\n                  height={600}\r\n                  scale={800}\r\n                  layer={this.state.layer}\r\n                  data={this.state.data}\r\n                  layer_type={region}\r\n                  mapfill={this.state.mapfill}\r\n                />\r\n                <OtherLevelMapLegend\r\n                  width={500}\r\n                  height={50}\r\n                  data={this.state.data}\r\n                  mapfill={this.state.mapfill}\r\n                />\r\n              </div>\r\n              <div className=\"visualization-parts\">\r\n                <OtherLevelBarchart\r\n                  width={400}\r\n                  height={600}\r\n                  data={this.state.data}\r\n                  field={this.state.field}\r\n                  us_data={this.us_data}\r\n                  layer_type={region}\r\n                  unit={this.state.unit}\r\n                  mapfill={this.state.mapfill}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n      } else if (region === \"Plant\") {\r\n        vis =\r\n          this.state.data.length === 0 ? (\r\n            <div className=\"loading\">\r\n              <Spinner animation=\"grow\" variant=\"success\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"visualization\">\r\n              <PlantLevelMapZoom\r\n                title={this.state.name}\r\n                data={this.state.data}\r\n                fuels={this.state.fuels}\r\n                json_data={this.state.json_data}\r\n                init_center={[-97.922211, 42.381266]}\r\n                init_zoom={3}\r\n                field={this.state.field}\r\n                fuel_label_lookup={fuel_label_lookup}\r\n                fuel_color_lookup={fuel_color_lookup}\r\n                fuel_icon_lookup={fuel_icon_lookup}\r\n                wrap_long_labels={wrap_long_labels}\r\n              />\r\n            </div>\r\n          );\r\n      }\r\n    }\r\n    return <div className=\"visualization\">{vis}</div>;\r\n  }\r\n}\r\n\r\nclass UpdatedVisualization extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Visualization\r\n          field={this.props.field}\r\n          name={this.props.name}\r\n          unit={this.props.unit}\r\n          tier1={this.props.tier1}\r\n          tier2={this.props.tier2}\r\n          tier4={this.props.tier4}\r\n          tier5={this.props.tier5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatedVisualization;\r\n","import React, { Component } from \"react\";\r\nimport * as _ from \"underscore\";\r\nimport { SentenceDropdown, SentenceMiscellaneous } from \"./Sentence\";\r\nimport UpdatedVisualization from \"./Visualization\";\r\nimport lookup from \"../assets/data/json/eGRID lookup.json\";\r\n\r\nconst year = 2018;\r\nconst conjunction = {\r\n  tier1_0: {\r\n    conjunct1: \"for\",\r\n    conjunct2: \"for\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_1: {\r\n    conjunct1: \"for\",\r\n    conjunct2: \"for\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_2: {\r\n    conjunct1: \"for\",\r\n    conjunct2: \"for\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_3: {\r\n    conjunct1: \"of\",\r\n    conjunct2: \"\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_4: {\r\n    conjunct1: \"from\",\r\n    conjunct2: \"\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_5: {\r\n    conjunct1: \"from\",\r\n    conjunct2: \"\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_6: {\r\n    conjunct1: \"for\",\r\n    conjunct2: \"\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_7: {\r\n    conjunct1: \"for\",\r\n    conjunct2: \"for\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_8: {\r\n    conjunct1: \"\",\r\n    conjunct2: \"\",\r\n    conjunct3: \"at the\",\r\n    conjunct4: \"level\",\r\n  },\r\n  tier1_9: { conjunct1: \"\", conjunct2: \"\", conjunct3: \"\", conjunct4: \"\" },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const init_options = this.props.options[0];\r\n    this.state = {\r\n      tier1: init_options.tier1,\r\n      tier2: init_options.tier2,\r\n      tier4: init_options.tier4,\r\n      tier5: init_options.tier5,\r\n      field: init_options[\"Final field name in eGRID\"],\r\n      unit: init_options.Units,\r\n      name: init_options[\"Full Name\"],\r\n      data: [],\r\n      all_options: this.props.options.filter(\r\n        (d) => d.tier1 === init_options.tier1\r\n      ),\r\n      tier1_available_options: _.uniq(this.props.options.map((d) => d.tier1)),\r\n      tier2_available_options: _.uniq(\r\n        this.props.options\r\n          .filter((d) => d.tier1 === init_options.tier1)\r\n          .map((d) => d.tier2)\r\n      ),\r\n      tier4_available_options: _.uniq(\r\n        this.props.options\r\n          .filter(\r\n            (d) =>\r\n              d.tier1 === init_options.tier1 &&\r\n              d.tier2 === init_options.tier2\r\n          )\r\n          .map((d) => d.tier4)\r\n      ),\r\n      tier5_available_options: _.uniq(\r\n        this.props.options\r\n          .filter(\r\n            (d) =>\r\n              d.tier1 === init_options.tier1 &&\r\n              d.tier2 === init_options.tier2 &&\r\n              d.tier4 === init_options.tier4\r\n          )\r\n          .map((d) => d.tier5)\r\n      ),\r\n    };\r\n\r\n    this.handleChange1 = this.handleChange1.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n    this.handleChange4 = this.handleChange4.bind(this);\r\n    this.handleChange5 = this.handleChange5.bind(this);\r\n  }\r\n\r\n  handleChange1(event) {\r\n    let val = event.target.value;\r\n    this.setState(\r\n      {\r\n        tier1: val,\r\n        all_options: this.props.options.filter((d) => d.tier1 === val),\r\n        updated_tier: \"tier1\",\r\n      },\r\n      () => {\r\n        let t2_avail = this.props.options.filter((d) => d.tier1 === val);\r\n        let t2_val =\r\n          t2_avail.map((d) => d.tier2).indexOf(this.state.tier2) === -1\r\n            ? _.uniq(t2_avail.map((d) => d.tier2))[0]\r\n            : this.state.tier2;\r\n        this.setState({ tier2: t2_val }, () => {\r\n          let t4_avail = this.props.options.filter(\r\n            (d) =>\r\n              d.tier1 === val &&\r\n              d.tier2 === this.state.tier2\r\n          );\r\n          let t4_val =\r\n            t4_avail.map((d) => d.tier4).indexOf(this.state.tier4) === -1\r\n              ? _.uniq(t4_avail.map((d) => d.tier4))[0]\r\n              : this.state.tier4;\r\n          this.setState({ tier4: t4_val }, () => {\r\n            let t5_avail = this.props.options.filter(\r\n              (d) =>\r\n                d.tier1 === val &&\r\n                d.tier2 === this.state.tier2 &&\r\n                d.tier4 === this.state.tier4\r\n            );\r\n            let t5_val =\r\n              t5_avail.map((d) => d.tier5).indexOf(this.state.tier5) === -1\r\n                ? _.uniq(t5_avail.map((d) => d.tier5))[0]\r\n                : this.state.tier5;\r\n            this.setState({ tier5: t5_val }, () => {\r\n              let opt = this.state.all_options.filter(\r\n                (d) =>\r\n                  d.tier1 === this.state.tier1 &&\r\n                  d.tier2 === this.state.tier2 &&\r\n                  d.tier4 === this.state.tier4 &&\r\n                  d.tier5 === this.state.tier5\r\n              )[0];\r\n              this.setState({\r\n                tier2_available_options: _.uniq(\r\n                  this.state.all_options.map((d) => d.tier2)\r\n                ),\r\n                tier4_available_options: _.uniq(\r\n                  this.state.all_options\r\n                    .filter(\r\n                      (d) =>\r\n                        d.tier2 === this.state.tier2\r\n                    )\r\n                    .map((d) => d.tier4)\r\n                ),\r\n                tier5_available_options: _.uniq(\r\n                  this.state.all_options\r\n                    .filter(\r\n                      (d) =>\r\n                        d.tier2 === this.state.tier2 &&\r\n                        d.tier4 === this.state.tier4\r\n                    )\r\n                    .map((d) => d.tier5)\r\n                ),\r\n              });\r\n              this.setState({\r\n                field: opt[\"Final field name in eGRID\"],\r\n                unit: opt.Units,\r\n                name: opt[\"Full Name\"],\r\n              });\r\n              // this.updateData();\r\n              console.log(this.state);\r\n            });\r\n          });\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  handleChange2(event) {\r\n    let val = event.target.value;\r\n    this.setState({ tier2: val, updated_tier: \"tier2\" }, () => {\r\n\r\n      let t4_avail = this.props.options.filter(\r\n        (d) =>\r\n          d.tier1 === this.state.tier1 &&\r\n          d.tier2 === val\r\n      );\r\n      let t4_val =\r\n        t4_avail.map((d) => d.tier4).indexOf(this.state.tier4) === -1\r\n          ? _.uniq(t4_avail.map((d) => d.tier4))[0]\r\n          : this.state.tier4;\r\n      this.setState({ tier4: t4_val }, () => {\r\n        let t5_avail = this.props.options.filter(\r\n          (d) =>\r\n            d.tier1 === this.state.tier1 &&\r\n            d.tier2 === val &&\r\n            d.tier4 === this.state.tier4\r\n        );\r\n        let t5_val =\r\n          t5_avail.map((d) => d.tier5).indexOf(this.state.tier5) === -1\r\n            ? _.uniq(t5_avail.map((d) => d.tier5))[0]\r\n            : this.state.tier5;\r\n        this.setState({ tier5: t5_val }, () => {\r\n          let opt = this.state.all_options.filter(\r\n            (d) =>\r\n              d.tier1 === this.state.tier1 &&\r\n              d.tier2 === this.state.tier2 &&\r\n              d.tier4 === this.state.tier4 &&\r\n              d.tier5 === this.state.tier5\r\n          )[0];\r\n          this.setState({\r\n            tier2_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier2)\r\n            ),\r\n            tier4_available_options: _.uniq(\r\n              this.state.all_options\r\n                .filter(\r\n                  (d) =>\r\n                    d.tier2 === this.state.tier2\r\n                )\r\n                .map((d) => d.tier4)\r\n            ),\r\n            tier5_available_options: _.uniq(\r\n              this.state.all_options\r\n                .filter(\r\n                  (d) =>\r\n                    d.tier2 === this.state.tier2 &&\r\n                    d.tier4 === this.state.tier4\r\n                )\r\n                .map((d) => d.tier5)\r\n            ),\r\n          });\r\n          this.setState({\r\n            field: opt[\"Final field name in eGRID\"],\r\n            unit: opt.Units,\r\n            name: opt[\"Full Name\"],\r\n          });\r\n          console.log(this.state);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange4(event) {\r\n    let val = event.target.value;\r\n    this.setState({ tier4: val, updated_tier: \"tier4\" }, () => {\r\n      let t2_avail = this.props.options.filter(\r\n        (d) => d.tier1 === this.state.tier1 && d.tier4 === val\r\n      );\r\n      let t2_val =\r\n        t2_avail.map((d) => d.tier2).indexOf(this.state.tier2) === -1\r\n          ? _.uniq(t2_avail.map((d) => d.tier2))[0]\r\n          : this.state.tier2;\r\n      this.setState({ tier2: t2_val }, () => {\r\n        let t5_avail = this.props.options.filter(\r\n          (d) =>\r\n            d.tier1 === this.state.tier1 &&\r\n            d.tier2 === this.state.tier2 &&\r\n            d.tier4 === val\r\n        );\r\n        let t5_val =\r\n          t5_avail.map((d) => d.tier5).indexOf(this.state.tier5) === -1\r\n            ? _.uniq(t5_avail.map((d) => d.tier5))[0]\r\n            : this.state.tier5;\r\n        this.setState({ tier5: t5_val }, () => {\r\n          let opt = this.state.all_options.filter(\r\n            (d) =>\r\n              d.tier1 === this.state.tier1 &&\r\n              d.tier2 === this.state.tier2 &&\r\n              d.tier4 === this.state.tier4 &&\r\n              d.tier5 === this.state.tier5\r\n          )[0];\r\n          this.setState({\r\n            tier2_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier2)\r\n            ),\r\n            tier4_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier4)\r\n            ),\r\n            tier5_available_options: _.uniq(\r\n              this.state.all_options\r\n                .filter(\r\n                  (d) =>\r\n                    d.tier2 === this.state.tier2 &&\r\n                    d.tier4 === this.state.tier4\r\n                )\r\n                .map((d) => d.tier5)\r\n            ),\r\n          });\r\n          this.setState({\r\n            field: opt[\"Final field name in eGRID\"],\r\n            unit: opt.Units,\r\n            name: opt[\"Full Name\"],\r\n          });\r\n          console.log(this.state);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange5(event) {\r\n    let val = event.target.value;\r\n    this.setState({ tier5: val, updated_tier: \"tier5\" }, () => {\r\n      let t2_avail = this.props.options.filter(\r\n        (d) => d.tier1 === this.state.tier1 && d.tier5 === val\r\n      );\r\n      let t2_val =\r\n        t2_avail.map((d) => d.tier2).indexOf(this.state.tier2) === -1\r\n          ? _.uniq(t2_avail.map((d) => d.tier2))[0]\r\n          : this.state.tier2;\r\n      this.setState({ tier2: t2_val }, () => {\r\n        let t4_avail = this.props.options.filter(\r\n          (d) =>\r\n            d.tier1 === this.state.tier1 &&\r\n            d.tier2 === this.state.tier2 &&\r\n            d.tier5 === val\r\n        );\r\n        let t4_val =\r\n          t4_avail.map((d) => d.tier4).indexOf(this.state.tier4) === -1\r\n            ? _.uniq(t4_avail.map((d) => d.tier4))[0]\r\n            : this.state.tier4;\r\n        this.setState({ tier4: t4_val }, () => {\r\n          let opt = this.state.all_options.filter(\r\n            (d) =>\r\n              d.tier1 === this.state.tier1 &&\r\n              d.tier2 === this.state.tier2 &&\r\n              d.tier4 === this.state.tier4 &&\r\n              d.tier5 === this.state.tier5\r\n          )[0];\r\n          this.setState({\r\n            tier2_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier2)\r\n            ),\r\n            tier4_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier4)\r\n            ),\r\n            tier5_available_options: _.uniq(\r\n              this.state.all_options.map((d) => d.tier5)\r\n            ),\r\n          });\r\n          this.setState({\r\n            field: opt[\"Final field name in eGRID\"],\r\n            unit: opt.Units,\r\n            name: opt[\"Full Name\"],\r\n          });\r\n          console.log(this.state);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let all_options = this.state.all_options;\r\n    let tier2_options = _.uniq(all_options.map((op) => lookup[op.tier2])),\r\n      tier4_options = _.uniq(all_options.map((op) => lookup[op.tier4])),\r\n      tier5_options = _.uniq(all_options.map((op) => lookup[op.tier5]));\r\n    return (\r\n      <div>\r\n        <p className=\"main\">\r\n          I want to explore\r\n          <SentenceDropdown\r\n            id=\"tier1\"\r\n            change={this.handleChange1}\r\n            updated_tier={this.state.updated_tier}\r\n            selected_option={this.state.tier1}\r\n            available_options={this.state.tier1_available_options}\r\n            options={_.uniq(\r\n              this.props.options.map((op) => [op.tier1, lookup[op.tier1]]),\r\n              (d) => d[0]\r\n            )}\r\n          />\r\n          <span> </span>\r\n          <SentenceMiscellaneous\r\n            value={conjunction[\"tier1_\" + this.state.tier1].conjunct1}\r\n          />\r\n          <span> </span>\r\n          {tier2_options.length > 1 ? (\r\n            <SentenceDropdown\r\n              id=\"tier2\"\r\n              change={this.handleChange2}\r\n              updated_tier={this.state.updated_tier}\r\n              selected_option={this.state.tier2}\r\n              available_options={this.state.tier2_available_options}\r\n              options={_.uniq(\r\n                this.state.all_options.map((op) => [\r\n                  op.tier2,\r\n                  lookup[op.tier2],\r\n                ]),\r\n                (d) => d[0]\r\n              )}\r\n            />\r\n          ) : tier2_options.length === 1 && tier2_options[0] !== \"\" ? (\r\n            <SentenceMiscellaneous value={lookup[this.state.tier2]} />\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n          <span> </span>\r\n          <SentenceMiscellaneous\r\n            value={conjunction[\"tier1_\" + this.state.tier1].conjunct2}\r\n          />\r\n          <span> </span>\r\n          {tier4_options.length > 1 ? (\r\n            <SentenceDropdown\r\n              id=\"tier4\"\r\n              change={this.handleChange4}\r\n              updated_tier={this.state.updated_tier}\r\n              selected_option={this.state.tier4}\r\n              available_options={this.state.tier4_available_options}\r\n              options={_.uniq(\r\n                this.state.all_options.map((op) => [\r\n                  op.tier4,\r\n                  lookup[op.tier4],\r\n                ]),\r\n                (d) => d[0]\r\n              )}\r\n            />\r\n          ) : tier4_options.length === 1 && tier4_options[0] !== \"\" ? (\r\n            <SentenceMiscellaneous value={lookup[this.state.tier4]} />\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n          <span> </span>\r\n          <SentenceMiscellaneous\r\n            value={conjunction[\"tier1_\" + this.state.tier1].conjunct3}\r\n          />\r\n          <span> </span>\r\n          {tier5_options.length > 1 ? (\r\n            <SentenceDropdown\r\n              id=\"tier5\"\r\n              change={this.handleChange5}\r\n              updated_tier={this.state.updated_tier}\r\n              selected_option={this.state.tier5}\r\n              available_options={this.state.tier5_available_options}\r\n              options={_.uniq(\r\n                this.state.all_options.map((op) => [\r\n                  op.tier5,\r\n                  lookup[op.tier5],\r\n                ]),\r\n                (d) => d[0]\r\n              )}\r\n            />\r\n          ) : tier5_options.length === 1 && tier5_options[0] !== \"\" ? (\r\n            <SentenceMiscellaneous value={lookup[this.state.tier5]} />\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n          <span> </span>\r\n          <SentenceMiscellaneous\r\n            value={conjunction[\"tier1_\" + this.state.tier1].conjunct4}\r\n          />\r\n          <span> for </span>\r\n          <SentenceMiscellaneous value={year} />.\r\n        </p>\r\n        <UpdatedVisualization\r\n          className=\"main\"\r\n          field={this.state.field}\r\n          name={this.state.name}\r\n          unit={this.state.unit}\r\n          tier1={this.state.tier1}\r\n          tier2={this.state.tier2}\r\n          tier4={this.state.tier4}\r\n          tier5={this.state.tier5}\r\n        ></UpdatedVisualization>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport Main from \"./Components/Main\";\r\nimport logo from \"./assets/img/logo.png\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"./assets/data/csv/eGRID all-level sentence structure.csv\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { OPTIONS: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    d3.csv(data).then((d) => {\r\n      this.setState({ OPTIONS: d.filter((e) => e.tier5 !== \"52\") });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        {this.state.OPTIONS.length > 0 ? (\r\n          <div>\r\n            <header>\r\n              <h2>Emissions and Generation Resource Integrated Database</h2>\r\n              <img id=\"logo\" src={logo}></img>\r\n            </header>\r\n            <Main options={this.state.OPTIONS}></Main>\r\n          </div>\r\n        ) : (\r\n          <div className=\"loading\">\r\n            <Spinner animation=\"grow\" variant=\"success\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/subregion.962d9d51.csv\";","module.exports = __webpack_public_path__ + \"static/media/NERC.e4d5529c.csv\";","module.exports = __webpack_public_path__ + \"static/media/state.aa898527.csv\";","module.exports = __webpack_public_path__ + \"static/media/eGRID state fullname.a33812da.csv\";","module.exports = __webpack_public_path__ + \"static/media/plant.004a86b9.csv\";","module.exports = __webpack_public_path__ + \"static/media/GGL.5324b8ca.csv\";","module.exports = __webpack_public_path__ + \"static/media/US.e83321ee.csv\";","module.exports = __webpack_public_path__ + \"static/media/coal.9692c7b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/gas.383feb87.svg\";","module.exports = __webpack_public_path__ + \"static/media/hydro.d3125ed9.svg\";","module.exports = __webpack_public_path__ + \"static/media/nuclear.2a50e8cf.svg\";"],"sourceRoot":""}